{"version":3,"sources":["webpack:///./src/pages/components/navigation/subnav.js","webpack:///./src/pages/components/navigation/mobilemenu.js","webpack:///./src/pages/templates/global-banner.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/pages/components/navigation/global-navigation.js"],"names":["SubNavigation","props","state","hideMenu","toggleMenu","bind","render","this","SubNavTitle","children","className","listClassName","title","cn","onClick","setState","prevState","React","Component","defaultProps","undefined","message","MobileMenu","isOpen","SubNavLinks","disableClick","toggleMenuOpen","type","style","position","data-id","href","Fragment","to","_assertThisInitialized","self","ReferenceError","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","GlobalNavigation","MainHeader","hasSubNav"],"mappings":";4NAIqBA,E,YAEnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,UAAU,GACzB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAHD,E,4CAMnBC,OAAA,WACE,IAAMN,EAAgBO,KAAKP,cAAcK,KAAKE,MAE9C,OACE,kBAAC,EAAD,O,EAIJP,cAAA,WAAiB,IAAD,IACRQ,EAAcD,KAAKC,YAAYH,KAAKE,MAD5B,EAEwCA,KAAKN,MAAnDQ,EAFM,EAENA,SAAUC,EAFJ,EAEIA,UAAWC,EAFf,EAEeA,cAAeC,EAF9B,EAE8BA,MAE5C,OACE,yBACEF,UAAWG,IAAG,WAAD,OACVH,KAAcA,EADJ,EAEX,aAAsB,MAATE,EAFF,KAKH,MAATA,GAAiB,kBAACJ,EAAD,MAClB,wBACEE,UAAWG,KAAE,OACZF,KAAkBA,EADN,EAEb,aAAaJ,KAAKL,MAAMC,SAFX,KAIZM,K,EAMTD,YAAA,WAAe,IACLI,EAAUL,KAAKN,MAAfW,MACWL,KAAKH,WAAWC,KAAKE,MAExC,OACE,yBAAKG,UAAU,iBAAiBI,QAASP,KAAKH,YAC3CQ,EACD,uBAAGF,UAAU,+E,EAKnBN,WAAA,WACEG,KAAKQ,UAAS,SAAAC,GAAS,MAAK,CAC1Bb,UAAWa,EAAUb,c,GArDgBc,IAAMC,WAgEjDlB,EAAcmB,aAAe,CAC3BT,eAAWU,EACXT,mBAAeS,EACfC,aAASD,I,2ICnEUE,E,YAEnB,WAAYrB,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEqB,QAAQ,GAFN,E,4CAKnBjB,OAAA,WACE,IAAMgB,EAAaf,KAAKe,WAAWjB,KAAKE,MAExC,OACE,kBAAC,EAAD,O,EAIJe,WAAA,WACE,IAAME,EAAcjB,KAAKiB,YAAYnB,KAAKE,MAClCkB,EAAiBlB,KAAKN,MAAtBwB,aAGR,OAFAlB,KAAKmB,eAAiBnB,KAAKmB,eAAerB,KAAKE,MAG7C,yBAAKG,UAAU,yBACb,4BACEiB,KAAK,SACLC,MAAO,CAAEC,SAAU,YACnBf,QAASP,KAAKmB,eACdhB,UAAWG,IAAG,CACZ,sBAAsB,EACtB,UAAWN,KAAKL,MAAMqB,OACtB,gBAAiBE,KAGnB,uBACEK,UAAQ,YACRpB,UAAS,2BAA4BH,KAAKL,MAAMqB,OAAS,sBAAwB,yBAGrF,kBAACC,EAAD,Q,EAKNA,YAAA,WAEE,OACE,6BAASd,UAAS,wBAAyBH,KAAKL,MAAMqB,OAAS,GAAK,iBAChE,2BAAOb,UAAU,kBAEf,yBAAKA,UAAU,0BAEf,yBAAKA,UAAU,sBACb,4BACE,4BAAI,uBAAGqB,KAAK,KAAR,WACJ,4BAAI,uBAAGA,KAAK,KAAR,WACJ,4BAAI,uBAAGA,KAAK,KAAR,gB,EASlBL,eAAA,WACEnB,KAAKQ,UAAS,SAACC,GAAD,MAAgB,CAAEO,QAASP,EAAUO,Y,GAhEfN,IAAMC,WAwE9CI,EAAWH,aAAe,CACxBM,cAAc,I,kCC7EhB,wDAOe,4BAEb,kBAAC,IAAMO,SAAP,KACE,kBAAC,UAAD,MAEA,0BAAMtB,UAAU,WACd,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,iCAEb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,8CACA,iDACA,kBAAC,OAAD,CAAMuB,GAAG,wBAAT,qB,kCCpBC,SAASC,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,EALT,mC,qBCAA,OAOA,WACE,aAEA,IAAIE,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,SAGZ,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIG,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAC/Bd,EAAQM,KAAKQ,QAIjBd,EAAQM,KAAKF,EAAIO,aAKvB,OAAOX,EAAQgB,KAAK,KAGeC,EAAOC,SAC1CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aA9CL,I,0JCDqBqB,E,YAEnB,WAAY3D,GAAQ,OAClB,YAAMA,IADW,K,4CAInBK,OAAA,WACE,IAAMuD,EAAatD,KAAKsD,WAAWxD,KAAKE,MAChCuD,EAAcvD,KAAKN,MAAnB6D,UAER,OACE,oCACE,kBAACD,EAAD,MACCC,GACC,kBAAC,UAAD,KACE,4BAAI,kBAAC,OAAD,CAAM7B,GAAI,IAAKvB,UAAU,UAAzB,aACJ,4BAAI,kBAAC,OAAD,CAAMuB,GAAI,KAAV,aACJ,4BAAI,kBAAC,OAAD,CAAMA,GAAI,KAAV,gB,EAOd4B,WAAA,WAEE,OACE,4BAAQnD,UAAU,UAClB,kBAAC,UAAD,MACA,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,sBAAb,SAEtB,yBAAKA,UAAU,cACd,4BACC,4BAAI,kBAAC,OAAD,CAAMuB,GAAI,IAAKvB,UAAU,UAAzB,WACJ,4BAAI,kBAAC,OAAD,CAAMuB,GAAI,KAAV,WACJ,4BAAI,kBAAC,OAAD,CAAMA,GAAI,KAAV,aAIN,yBAAKvB,UAAU,SAAQ,uBAAGA,UAAU,4CAA8C,yBAAKA,UAAU,SAAf,QAClF,yBAAKA,UAAU,WACd,yBAAKA,UAAU,iBAAgB,0BAAMA,UAAU,YAAhB,OAC/B,0BAAMA,UAAU,gBAAhB,mBACA,uBAAGA,UAAU,iE,EAOlBgB,eAAA,WACEnB,KAAKQ,UAAS,SAACC,GAAD,MAAgB,CAAEO,QAASP,EAAUO,Y,GAnDTN,IAAMC,WA2DpD0C,EAAiBzC,aAAe,CAC9B2C,WAAW","file":"component---src-pages-templates-global-banner-js-7d9a62c2a60b8b6c2dbd.js","sourcesContent":["import cn from \"classnames\";\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class SubNavigation extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { hideMenu: true };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  render() {\n    const SubNavigation = this.SubNavigation.bind(this);\n\n    return (\n      <SubNavigation />\n    );\n  }\n\n  SubNavigation() {\n    const SubNavTitle = this.SubNavTitle.bind(this);\n    const { children, className, listClassName, title } = this.props;\n\n    return (\n      <nav\n        className={cn(\"sub-nav\", {\n          [className]: !!className,\n          \"has-title\": title != null\n        })}\n      >\n        {title != null && <SubNavTitle/>}\n        <ul\n          className={cn({\n          [listClassName]: !!listClassName,\n          \"hide-menu\": this.state.hideMenu\n        })}>\n          {children}\n        </ul>\n      </nav>\n    );\n  }\n\n  SubNavTitle() {\n    const { title } = this.props;\n    const toggleMenu = this.toggleMenu.bind(this);\n\n    return (\n      <div className=\"sub-nav--title\" onClick={this.toggleMenu}>\n        {title}\n        <i className=\"dashing-icon dashing-icon--arrow-down dashing-icon--purple sub-nav--icon\" />\n      </div>\n    );\n  }\n\n  toggleMenu() {\n    this.setState(prevState => ({\n      hideMenu: !prevState.hideMenu\n    }));\n   }\n}\n\nSubNavigation.propTypes = {\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  title: PropTypes.string\n};\n\nSubNavigation.defaultProps = {\n  className: undefined,\n  listClassName: undefined,\n  message: undefined\n};\n","import cn from \"classnames\";\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class MobileMenu extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  render() {\n    const MobileMenu = this.MobileMenu.bind(this);\n\n    return (\n      <MobileMenu />\n    );\n  }\n\n  MobileMenu() {\n    const SubNavLinks = this.SubNavLinks.bind(this);\n    const { disableClick } = this.props;\n    this.toggleMenuOpen = this.toggleMenuOpen.bind(this);\n\n    return (\n      <div className=\"mobile-menu_container\">\n        <button\n          type=\"button\"\n          style={{ position: \"absolute\" }}\n          onClick={this.toggleMenuOpen}\n          className={cn({\n            \"mobile-menu_toggle\": true,\n            \"is-open\": this.state.isOpen,\n            \"disable-click\": disableClick\n        })}\n        >\n          <i\n            data-id=\"menu-icon\"\n            className={`dashing-icon no-margin ${this.state.isOpen ? \"dashing-icon--close\" : \"dashing-icon--menu\"}`}\n          />\n        </button>\n        <SubNavLinks />\n      </div>\n    );\n  }\n\n  SubNavLinks() {\n\n    return (\n      <section className={`mobile-menu_overlay ${this.state.isOpen ? \"\" : \"is-collapsed\"}`}>\n          <aside className=\"mobile-sidebar\">\n\n            <div className=\"mobile-sidebar_header\" />\n\n            <nav className=\"mobile-sidebar_nav\">\n              <ul>\n                <li><a href=\"#\">Page 1</a></li>\n                <li><a href=\"#\">Page 2</a></li>\n                <li><a href=\"#\">Page 3</a></li>\n              </ul>\n            </nav>\n\n          </aside>\n      </section>\n    );\n  }\n\n  toggleMenuOpen() {\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\n  }\n}\n\nMobileMenu.propTypes = {\n  disableClick: PropTypes.bool\n};\n\nMobileMenu.defaultProps = {\n  disableClick: false\n};\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport GlobalNavigation from \"../components/navigation/global-navigation\";\n// The scss needs to be imported here for running 'gatsby build'\n//import '../../sass/example-page/example-page.scss'\n//import '../../sass/experimental/placeholder.scss'\n\nexport default () => (\n\n  <React.Fragment>\n    <GlobalNavigation />\n\n    <main className=\"content\">\n      <div className=\"grid grid-padding\">\n        <div className=\"grid--full grid--half_desktop\">\n\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <h1>Primary Header</h1>\n              <p>Header description</p>\n              <Link to=\"/templates/overpanel\">Full Page</Link>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </main>\n  </React.Fragment>\n\n);\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import { Link } from 'gatsby'\nimport React from 'react'\nimport MobileMenu from './mobilemenu'\nimport SubNavigation from './subnav'\nimport PropTypes from 'prop-types'\n\nexport default class GlobalNavigation extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const MainHeader = this.MainHeader.bind(this);\n    const { hasSubNav } = this.props;\n\n    return (\n      <>\n        <MainHeader />\n        {hasSubNav && (\n          <SubNavigation>\n            <li><Link to={\"/\"} className=\"active\">Option 1</Link></li>\n            <li><Link to={\"/\"}>Option 2</Link></li>\n            <li><Link to={\"/\"}>Option 3</Link></li>\n          </SubNavigation>\n        )}\n      </>\n    );\n  }\n\n  MainHeader() {\n\n    return (\n      <header className=\"header\">\n    \t\t<MobileMenu />\n    \t\t<div className=\"logo\"><p className=\"text-color--purple\">LOGO</p></div>\n\n    \t\t<nav className=\"header-nav\">\n    \t\t\t<ul>\n    \t\t\t\t<li><Link to={\"/\"} className=\"active\">Page 1</Link></li>\n    \t\t\t\t<li><Link to={\"/\"}>Page 2</Link></li>\n    \t\t\t\t<li><Link to={\"/\"}>Page 3</Link></li>\n    \t\t\t</ul>\n    \t\t</nav>\n\n    \t\t<div className=\"alert\"><i className=\"dashing-icon dashing-icon--notification\"></i><div className=\"count\">100</div></div>\n    \t\t<div className=\"profile\">\n    \t\t\t<div className=\"profile-image\"><span className=\"initials\">RF</span></div>\n    \t\t\t<span className=\"profile-name\">Ryan Fitzgerald</span>\n    \t\t\t<i className=\"dashing-icon dashing-icon--arrow-down dashing-icon--black\"></i>\n    \t\t</div>\n\n    \t</header>\n    );\n  }\n\n  toggleMenuOpen() {\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\n  }\n}\n\nGlobalNavigation.propTypes = {\n  hasSubNav: PropTypes.bool\n};\n\nGlobalNavigation.defaultProps = {\n  hasSubNav: false\n};\n"],"sourceRoot":""}