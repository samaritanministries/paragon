{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js","webpack:///./src/components/subnavigation.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./src/components/codetoggle.js","webpack:///./src/pages/components/forms/code.js"],"names":["self","Prism","global","a","e","t","plugins","customClass","add","n","map","s","prefix","hooks","content","type","language","Array","isArray","classes","push","apply","SubNav","getPageName","pageName","sectionName","hasReact","getSectionName","replace","className","partiallyActive","activeClassName","to","defaultProps","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","i","util","clone","javascript","jsx","tag","spread","punctuation","script","o","join","p","length","tagName","pop","openedBraces","g","splice","Token","tokens","CodeToggle","props","state","showCode","toggleCode","bind","componentDidMount","highlightAll","this","setState","prevState","render","children","onClick","React","Component","currentPageNameLower","toLowerCase","FooterCode","location","id","pathname","htmlFor","value","disabled","htmlfor"],"mappings":"gFAAA,wBACE,GAAI,oBAAsBA,MAAQA,KAAKC,YAAS,IAAsBC,GAAUA,EAAOD,MAAO,CAC5F,IAAIE,EACAC,EACAC,EAAI,GACRJ,MAAMK,QAAQC,YAAc,CAC1BC,IAAK,SAAaC,GAChBN,EAAIM,GAENC,IAAK,SAAaC,GAChBP,EAAI,mBAAqBO,EAAIA,EAAI,SAAUF,GACzC,OAAOE,EAAEF,IAAMA,IAGnBG,OAAQ,SAAgBH,GACtBJ,EAAII,GAAK,KAEVR,MAAMY,MAAML,IAAI,QAAQ,SAAUG,GACnC,GAAIR,EAAG,CACL,IAAIM,EAAIN,EAAE,CACRW,QAASH,EAAEG,QACXC,KAAMJ,EAAEI,KACRC,SAAUL,EAAEK,WAEdC,MAAMC,QAAQT,GAAKE,EAAEQ,QAAQC,KAAKC,MAAMV,EAAEQ,QAASV,GAAKA,GAAKE,EAAEQ,QAAQC,KAAKX,IAG7EL,GAAKC,KAAOM,EAAEQ,QAAUR,EAAEQ,QAAQT,KAAI,SAAUD,GAC/C,OAAOJ,GAAKD,EAAIA,EAAEK,EAAGE,EAAEK,UAAYP,WA5B3C,K,wDCAA,qCAIMa,EAAS,SAAC,GAAyC,IAEnDC,EAFYC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAGnCC,EAAiBF,EAKrB,OAHgB,OAAhBA,IAAuBE,EAAiB,cACxCJ,EAAcC,EAASI,QAAQ,OAAQ,KAGrC,yBAAKC,UAAU,gBACb,kBAAC,OAAD,CAAMC,iBAAiB,EAAMC,gBAAgB,SAASC,GAAE,IAAML,EAAN,IAAwBJ,EAAxB,SAAxD,QACCG,GAAY,kBAAC,OAAD,CAAMI,iBAAiB,EAAMC,gBAAgB,SAASC,GAAE,IAAML,EAAN,IAAwBJ,EAAxB,cAAxD,SACb,kBAAC,OAAD,CAAMO,iBAAiB,EAAMC,gBAAgB,SAASC,GAAE,IAAML,EAAN,IAAwBJ,EAAxB,eAAxD,gBAWND,EAAOW,aAAe,CACpBT,SAAU,IACVC,YAAa,KACbC,UAAU,GAGGJ,O,mBCjCfrB,MAAMiC,UAAUC,KAAOlC,MAAMiC,UAAUE,OAAO,MAAO,CACnDC,QAAS,CACPC,QAAS,uCACTC,YAAY,GAEdC,OAAQ,CACNF,QAAS,sDACTG,OAAQ,CACNC,KAAM,YAGVC,IAAK,0BACLC,SAAU,CACRN,QAAS,mGACTG,OAAQ,CACNI,OAAQ,CACNP,QAAS,IACTQ,MAAO,aAETC,YAAa,UACbC,SAAU,2BAGdC,SAAU,CACRX,QAAS,2CACTG,OAAQ,CACNO,SAAU,6BAGZ/C,MAAMiC,UAAUgB,aAAa,OAAQ,SAAU,CACjDC,QAAS,CAAC,oHAAqH,CAC7Hb,QAAS,4BACTC,YAAY,MAEZtC,MAAMiC,UAAUgB,aAAa,OAAQ,YAAa,CACpDF,SAAU,2BACR/C,MAAMiC,UAAUgB,aAAa,OAAQ,WAAY,CACnD,kBAAmB,CACjBZ,QAAS,6BACTQ,MAAO,WAETC,YAAa,CACXT,QAAS,UACTQ,MAAO,YAETM,UAAW,CACTd,QAAS,6BACTQ,MAAO,WAETO,QAAS,qBACTC,KAAM,CACJhB,QAAS,WACTQ,MAAO,WAETS,SAAU,CACRjB,QAAS,kDACTC,YAAY,KAEZtC,MAAMiC,UAAUC,KAAKK,OAAOC,OAAOe,KAAOvD,MAAMiC,UAAUC,M,oBC1D7D,SAAUsB,GACT,IAAIpD,EAAIoD,EAAEC,KAAKC,MAAMF,EAAEvB,UAAU0B,YACjCH,EAAEvB,UAAU2B,IAAMJ,EAAEvB,UAAUE,OAAO,SAAU/B,GAAIoD,EAAEvB,UAAU2B,IAAIC,IAAIxB,QAAU,2MAA4MmB,EAAEvB,UAAU2B,IAAIC,IAAIrB,OAAOqB,IAAIxB,QAAU,kBAAmBmB,EAAEvB,UAAU2B,IAAIC,IAAIrB,OAAO,cAAcH,QAAU,gEAAiEmB,EAAEvB,UAAU2B,IAAIC,IAAIrB,OAAOqB,IAAIrB,OAAO,cAAgB,4BAA6BgB,EAAEvB,UAAUgB,aAAa,SAAU,YAAa,CAC9kBa,OAAQ,CACNzB,QAAS,sDACTG,OAAQ,CACNuB,YAAa,cACb,aAAc,SAGjBP,EAAEvB,UAAU2B,IAAIC,KAAML,EAAEvB,UAAUgB,aAAa,SAAU,aAAc,CACxEe,OAAQ,CACN3B,QAAS,iDACTG,OAAQ,CACN,qBAAsB,CACpBH,QAAS,UACTQ,MAAO,eAETU,KAAMC,EAAEvB,UAAU2B,KAEpBf,MAAO,wBAERW,EAAEvB,UAAU2B,IAAIC,KAEnB,IAAII,EAAI,SAASA,EAAE7D,GACjB,OAAOA,EAAI,iBAAmBA,EAAIA,EAAI,iBAAmBA,EAAES,QAAUT,EAAES,QAAUT,EAAES,QAAQJ,IAAIwD,GAAGC,KAAK,IAAM,IAmB/GV,EAAE5C,MAAML,IAAI,kBAAkB,SAAUH,GACtC,QAAUA,EAAEW,UAAY,QAAUX,EAAEW,UAlB9B,SAASoD,EAAE/D,GACjB,IAAK,IAAII,EAAI,GAAIL,EAAI,EAAGA,EAAIC,EAAEgE,OAAQjE,IAAK,CACzC,IAAID,EAAIE,EAAED,GACNO,GAAI,EAER,GAAI,iBAAmBR,IAAM,QAAUA,EAAEY,MAAQZ,EAAEW,QAAQ,IAAM,QAAUX,EAAEW,QAAQ,GAAGC,KAAO,OAASZ,EAAEW,QAAQ,GAAGA,QAAQ,GAAGA,QAAU,EAAIL,EAAE4D,QAAU5D,EAAEA,EAAE4D,OAAS,GAAGC,UAAYJ,EAAE/D,EAAEW,QAAQ,GAAGA,QAAQ,KAAOL,EAAE8D,MAAQ,OAASpE,EAAEW,QAAQX,EAAEW,QAAQuD,OAAS,GAAGvD,SAAWL,EAAEW,KAAK,CACvRkD,QAASJ,EAAE/D,EAAEW,QAAQ,GAAGA,QAAQ,IAChC0D,aAAc,IACX,EAAI/D,EAAE4D,QAAU,gBAAkBlE,EAAEY,MAAQ,MAAQZ,EAAEW,QAAUL,EAAEA,EAAE4D,OAAS,GAAGG,eAAiB,EAAI/D,EAAE4D,QAAU,EAAI5D,EAAEA,EAAE4D,OAAS,GAAGG,cAAgB,gBAAkBrE,EAAEY,MAAQ,MAAQZ,EAAEW,QAAUL,EAAEA,EAAE4D,OAAS,GAAGG,eAAiB7D,GAAI,IAAMA,GAAK,iBAAmBR,IAAM,EAAIM,EAAE4D,QAAU,IAAM5D,EAAEA,EAAE4D,OAAS,GAAGG,aAAc,CACrU,IAAIC,EAAIP,EAAE/D,GACVC,EAAIC,EAAEgE,OAAS,IAAM,iBAAmBhE,EAAED,EAAI,IAAM,eAAiBC,EAAED,EAAI,GAAGW,QAAU0D,GAAKP,EAAE7D,EAAED,EAAI,IAAKC,EAAEqE,OAAOtE,EAAI,EAAG,IAAK,EAAIA,IAAM,iBAAmBC,EAAED,EAAI,IAAM,eAAiBC,EAAED,EAAI,GAAGW,QAAU0D,EAAIP,EAAE7D,EAAED,EAAI,IAAMqE,EAAGpE,EAAEqE,OAAOtE,EAAI,EAAG,GAAIA,KAAMC,EAAED,GAAK,IAAIqD,EAAEkB,MAAM,aAAcF,EAAG,KAAMA,GAGvStE,EAAEW,SAAW,iBAAmBX,EAAEW,SAAWsD,EAAEjE,EAAEW,UAKHsD,CAAE/D,EAAEuE,WA7CvD,CA+CC3E,Q,wGCxCI4E,G,0CAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,UAAU,GACzB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAHD,E,4CAMnBC,kBAAA,WACElF,IAAMmF,gB,EAGRH,WAAA,WACEI,KAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BP,UAAWO,EAAUP,c,EAIzBQ,OAAA,WAAU,IAAD,EACwBH,KAAKP,MAA5BW,EADD,EACCA,SAAUzE,EADX,EACWA,SACVgE,EAAaK,KAAKN,MAAlBC,SAGR,OAFA/E,IAAMK,QAAQC,YAAYG,IAAI,CAAEoD,IAAK,eAGnC,yBAAKjC,UAAWmD,EAAW,aAAe,IACxC,yBAAKU,QAASL,KAAKJ,WAAYpD,UAAWmD,EAAW,sBAAwB,eAC3E,uBAAGnD,UAAU,gBAEf,yBAAKA,UAAWmD,EAAQ,YAAehE,EAAf,oBAA6CA,GACnE,0BAAMa,UAAWmD,EAAQ,YAAehE,EAAf,oBAA6CA,GAAayE,M,GA7BpEE,IAAMC,YA0C/Bf,EAAW5C,aAAe,CACxBwD,SAAU,UACVzE,SAAU,QAGG6D,O,0IC5CTgB,EADkB,QACqBC,cAEvCC,E,kGAGJP,OAAA,WAAU,IACAQ,EAAaX,KAAKP,MAAlBkB,SAER,OACE,kBAAC,IAAD,KACE,4BAAQnE,UAAU,UAChB,4BAZc,SAad,kBAAC,IAAD,CAAQL,SAAUqE,KAEtB,kBAAC,IAAD,KACA,yBAAKhE,UAAU,qBAEX,wBAAIoE,GAAG,SAAP,QACE,kBAAC,OAAD,CAAMjE,GAAIgE,EAASE,SAAW,UAAWrE,UAAU,kDAErD,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,kCACE,2BAAOsE,QAAQ,aAAf,cACA,2BAAOpF,KAAK,OAAOkF,GAAG,eAGxB,8BAAUpE,UAAU,eAClB,2BAAOsE,QAAQ,sBAAf,cACA,2BAAOpF,KAAK,OAAOkF,GAAG,qBAAqBlD,YAAY,4BAGzD,kCACE,2BAAOoD,QAAQ,sBAAf,uBACA,2BAAOpF,KAAK,OAAOkF,GAAG,qBAAqBG,MAAM,yBAAyBC,UAAQ,KAGpF,kCACE,2BAAOF,QAAQ,iBAAf,YACA,8BAAUF,GAAG,qBAInB,kBAAC,IAAD,krBA0BF,wBAAIpE,UAAU,cAAcoE,GAAG,cAA/B,cACE,kBAAC,OAAD,CAAMjE,GAAIgE,EAASE,SAAW,eAAgBrE,UAAU,kDAE1D,iEAAsC,0BAAMA,UAAU,gBAAhB,qBAAtC,0GACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,8BAAUA,UAAU,oBAClB,2BAAOsE,QAAQ,oBAAf,eACA,4BAAQF,GAAG,oBACT,4CACA,4CACA,gDAKR,kBAAC,IAAD,yXAiBF,wBAAIpE,UAAU,cAAcoE,GAAG,eAA/B,eACE,kBAAC,OAAD,CAAMjE,GAAIgE,EAASE,SAAW,gBAAiBrE,UAAU,kDAE3D,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,YACb,8BAAUA,UAAU,oBAClB,2BAAOsE,QAAQ,oBAAf,eACA,yBAAKtE,UAAU,iBACb,2BAAOd,KAAK,OAAOc,UAAU,iBAAiBoE,GAAG,mBAAmBlD,YAAY,wBAChF,4BAAQhC,KAAK,OAAOc,UAAU,iBAC5B,wCACA,0CACA,4CAKR,yBAAKA,UAAU,YACb,kCACE,2BAAOsE,QAAQ,sBAAf,iBACA,yBAAKtE,UAAU,iBACb,2BAAOd,KAAK,OAAOc,UAAU,iBAAiBoE,GAAG,uBACjD,2BAAOlF,KAAK,SAASc,UAAU,qCAAqCuE,MAAM,aAG9E,kCACE,2BAAOD,QAAQ,sBAAf,sBACA,yBAAKtE,UAAU,iBACb,2BAAOd,KAAK,OAAOc,UAAU,iBAAiBoE,GAAG,uBACjD,4BAAQpE,UAAU,6CAChB,uBAAGA,UAAU,4CAOzB,kBAAC,IAAD,szCAyCF,wBAAIA,UAAU,cAAcoE,GAAG,sBAA/B,uBACE,kBAAC,OAAD,CAAMjE,GAAIgE,EAASE,SAAW,uBAAwBrE,UAAU,kDAElE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,kCACE,2BAAOsE,QAAQ,gBAAf,2BACA,2BAAOpF,KAAK,OAAOkF,GAAG,iBACtB,yBAAKpE,UAAU,WAAf,gFAGF,8BAAUA,UAAU,aAClB,2BAAOsE,QAAQ,cAAf,yBACA,2BAAOpF,KAAK,OAAOkF,GAAG,eACtB,yBAAKpE,UAAU,WAAf,uEAGF,8BAAUA,UAAU,eAClB,2BAAOsE,QAAQ,gBAAf,2BACA,2BAAOpF,KAAK,OAAOkF,GAAG,iBACtB,yBAAKpE,UAAU,WAAf,8DAKR,kBAAC,IAAD,20BA0BE,wBAAIA,UAAU,cAAcoE,GAAG,4BAA/B,8BACE,kBAAC,OAAD,CAAMjE,GAAIgE,EAASE,SAAW,6BAA8BrE,UAAU,kDAExE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,kCACE,2BAAOsE,QAAQ,QAAf,QACA,2BAAOpF,KAAK,OAAOkF,GAAG,UAGxB,kCACE,2BAAOE,QAAQ,QAAf,QACA,2BAAOpF,KAAK,OAAOkF,GAAG,UAGxB,kCACE,2BAAOE,QAAQ,SAAf,SACA,2BAAOpF,KAAK,QAAQkF,GAAG,WAGzB,kCACE,2BAAOE,QAAQ,SAAf,SACA,2BAAOpF,KAAK,QAAQkF,GAAG,QAAQlD,YAAY,8BAG7C,kCACE,2BAAOoD,QAAQ,YAAf,YACA,2BAAOpF,KAAK,WAAWkF,GAAG,cAG5B,kCACE,2BAAOE,QAAQ,UAAf,UACA,2BAAOpF,KAAK,SAASkF,GAAG,YAG1B,kCACE,2BAAOE,QAAQ,OAAf,OACA,2BAAOpF,KAAK,MAAMkF,GAAG,SAGvB,kCACE,2BAAOE,QAAQ,QAAf,QACA,2BAAOpF,KAAK,OAAOkF,GAAG,YAI5B,kBAAC,IAAD,i8BA+CF,wBAAIpE,UAAU,cAAcoE,GAAG,qBAA/B,sBACE,kBAAC,OAAD,CAAMjE,GAAIgE,EAASE,SAAW,sBAAuBrE,UAAU,kDAEjE,uBAAGA,UAAU,mBAAb,sCACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,8BAAUA,UAAU,iBAClB,2BAAOsE,QAAQ,SAAf,SACA,2BAAOpF,KAAK,QAAQkF,GAAG,aAK7B,kBAAC,IAAD,+JASF,wBAAIpE,UAAU,cAAcoE,GAAG,eAA/B,eACE,kBAAC,OAAD,CAAMjE,GAAIgE,EAASE,SAAW,gBAAiBrE,UAAU,kDAE3D,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,aAAd,gBAGF,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,YACb,kCACE,2BAAOsE,QAAQ,aAAf,cACA,2BAAOpF,KAAK,OAAOkF,GAAG,eAExB,kCACE,2BAAOE,QAAQ,cAAf,cACA,2BAAOpF,KAAK,OAAOkF,GAAG,iBAG1B,yBAAKpE,UAAU,YACb,kCACE,2BAAOsE,QAAQ,aAAf,cACA,2BAAOpF,KAAK,OAAOkF,GAAG,eAExB,8BAAUpE,UAAU,oBAClB,2BAAOyE,QAAQ,eAAf,UACA,4BAAQL,GAAG,eACT,4CACA,8CAGJ,8BAAUpE,UAAU,YAEtB,yBAAKA,UAAU,YACb,kCACE,2BAAOsE,QAAQ,iBAAf,YACA,8BAAUF,GAAG,qBAInB,yBAAKpE,UAAU,eACb,4BAAQA,UAAU,eAAlB,UACA,4BAAQA,UAAU,oCAAlB,YAGJ,kBAAC,IAAD,iuC,GA7YW8D,IAAMC,WAmchBG","file":"component---src-pages-components-forms-code-js-53d41338482715f0bf2b.js","sourcesContent":["!function () {\n  if (\"undefined\" != typeof self && self.Prism || \"undefined\" != typeof global && global.Prism) {\n    var a,\n        e,\n        t = \"\";\n    Prism.plugins.customClass = {\n      add: function add(n) {\n        a = n;\n      },\n      map: function map(s) {\n        e = \"function\" == typeof s ? s : function (n) {\n          return s[n] || n;\n        };\n      },\n      prefix: function prefix(n) {\n        t = n || \"\";\n      }\n    }, Prism.hooks.add(\"wrap\", function (s) {\n      if (a) {\n        var n = a({\n          content: s.content,\n          type: s.type,\n          language: s.language\n        });\n        Array.isArray(n) ? s.classes.push.apply(s.classes, n) : n && s.classes.push(n);\n      }\n\n      (e || t) && (s.classes = s.classes.map(function (n) {\n        return t + (e ? e(n, s.language) : n);\n      }));\n    });\n  }\n}();","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n","Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)?url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  \"module-modifier\": {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: \"keyword\"\n  },\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","!function (i) {\n  var t = i.util.clone(i.languages.javascript);\n  i.languages.jsx = i.languages.extend(\"markup\", t), i.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i, i.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, i.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i, i.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, i.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, i.languages.jsx.tag), i.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: i.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, i.languages.jsx.tag);\n\n  var o = function o(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(o).join(\"\") : \"\";\n  },\n      p = function p(t) {\n    for (var n = [], e = 0; e < t.length; e++) {\n      var a = t[e],\n          s = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < n.length && n[n.length - 1].tagName === o(a.content[0].content[1]) && n.pop() : \"/>\" === a.content[a.content.length - 1].content || n.push({\n        tagName: o(a.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n.length && \"punctuation\" === a.type && \"{\" === a.content ? n[n.length - 1].openedBraces++ : 0 < n.length && 0 < n[n.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? n[n.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof a) && 0 < n.length && 0 === n[n.length - 1].openedBraces) {\n        var g = o(a);\n        e < t.length - 1 && (\"string\" == typeof t[e + 1] || \"plain-text\" === t[e + 1].type) && (g += o(t[e + 1]), t.splice(e + 1, 1)), 0 < e && (\"string\" == typeof t[e - 1] || \"plain-text\" === t[e - 1].type) && (g = o(t[e - 1]) + g, t.splice(e - 1, 1), e--), t[e] = new i.Token(\"plain-text\", g, null, g);\n      }\n\n      a.content && \"string\" != typeof a.content && p(a.content);\n    }\n  };\n\n  i.hooks.add(\"after-tokenize\", function (t) {\n    \"jsx\" !== t.language && \"tsx\" !== t.language || p(t.tokens);\n  });\n}(Prism);","import React from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/plugins/custom-class/prism-custom-class.min.js\";\nimport \"prismjs/components/prism-jsx.min.js\";\nimport \"prismjs/components/prism-scss.min.js\";\nimport PropTypes from \"prop-types\";\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggleCode() {\n    this.setState((prevState) => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  render() {\n    const { children, language } = this.props;\n    const { showCode } = this.state;\n    Prism.plugins.customClass.map({ tag: \"exampletag\" });\n\n    return (\n      <div className={showCode ? \"group-open\" : \"\"}>\n        <div onClick={this.toggleCode} className={showCode ? \"code-toggle is-open\" : \"code-toggle\"}>\n          <i className=\"icon--code\" />\n        </div>\n        <pre className={showCode ? `language-${language} show` : `language-${language}`}>\n          <code className={showCode ? `language-${language} show` : `language-${language}`}>{children}</code>\n        </pre>\n      </div>\n    );\n  }\n\n}\n\nCodeToggle.propTypes = {\n  children: PropTypes.string,\n  language: PropTypes.string\n};\n\nCodeToggle.defaultProps = {\n  children: \"Default\",\n  language: \"html\"\n};\n\nexport default CodeToggle;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Forms\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass FooterCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n      <AppContent>\n    \t\t<div className=\"grid grid-padding\">\n\n          <h2 id=\"forms\">Forms\n            <Link to={location.pathname + \"/#forms\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n          <div className=\"example-container\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <fieldset>\n                  <label htmlFor=\"form-text\">Text Input</label>\n                  <input type=\"text\" id=\"form-text\"/>\n                </fieldset>\n\n                <fieldset className=\"is-optional\">\n                  <label htmlFor=\"form-text-optional\">Text Input</label>\n                  <input type=\"text\" id=\"form-text-optional\" placeholder=\"This input is optional\"/>\n                </fieldset>\n\n                <fieldset>\n                  <label htmlFor=\"form-text-disabled\">Text Input disabled</label>\n                  <input type=\"text\" id=\"form-text-disabled\" value=\"This input is disabled\" disabled />\n                </fieldset>\n\n                <fieldset>\n                  <label htmlFor=\"form-textarea\">Textarea</label>\n                  <textarea id=\"form-textarea\"></textarea>\n                </fieldset>\n              </div>\n            </div>\n            <CodeToggle>\n{`<!-- Default Input -->\n<fieldset>\n  <label for=\"form-text\">Text Input</label>\n  <input type=\"text\" id=\"form-text\"/>\n</fieldset>\n\n<!-- Add is-optional to fieldset to add label -->\n<fieldset class=\"is-optional\">\n  <label for=\"form-text-optional\">Text Input</label>\n  <input type=\"text\" id=\"form-text-optional\" placeholder=\"This input is optional\" />\n</fieldset>\n\n<fieldset>\n  <label for=\"form-text-disabled\">Text Input disabled</label>\n  <input type=\"text\" id=\"form-text-disabled\" value=\"This input is disabled\" disabled />\n</fieldset>\n\n<fieldset>\n  <label for=\"form-textarea\">Textarea</label>\n  <textarea id=\"form-textarea\"></textarea>\n</fieldset>\n`}\n            </CodeToggle>\n          </div>\n\n          <h2 className=\"mt-space-xl\" id=\"selectMenu\">Select Menu\n            <Link to={location.pathname + \"/#selectMenu\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n          <p>To add the drop-down icon, add the <code className=\"example-text\">.select--has-icon</code> class to the parent container. Ensure you also have the dashing-icon font library properly installed.</p>\n          <div className=\"example-container\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <fieldset className=\"select--has-icon\">\n                  <label htmlFor=\"form-add-on-menu\">Select Menu</label>\n                  <select id=\"form-add-on-menu\">\n                    <option>Option 1</option>\n                    <option>Option 2</option>\n                    <option>Option 3</option>\n                  </select>\n                </fieldset>\n              </div>\n            </div>\n            <CodeToggle>\n{`<!-- Select Element with custom icon -->\n<div card=\"card\">\n<div card=\"card-content\">\n  <fieldset class=\"select--has-icon\">\n    <label for=\"form-add-on-menu\">Select Menu</label>\n    <select id=\"form-add-on-menu\">\n      <option>Option 1</option>\n      <option>Option 2</option>\n      <option>Option 3</option>\n    </select>\n  </fieldset>\n</div>\n</div>`}\n            </CodeToggle>\n          </div>\n\n          <h2 className=\"mt-space-xl\" id=\"inputGroups\">Input Groups\n            <Link to={location.pathname + \"/#inputGroups\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n          <div className=\"example-container\">\n            <div className=\"card\">\n              <div className=\"card-content flex-content\">\n                <div className=\"flex-row\">\n                  <fieldset className=\"select--has-icon\">\n                    <label htmlFor=\"form-input-group\">Input Group</label>\n                    <div className=\"input--add-on\">\n                      <input type=\"text\" className=\"add-on--before\" id=\"form-input-group\" placeholder=\"e.g. (481) 516-2342\"/>\n                      <select type=\"text\" className=\"add-on--after\">\n                        <option>Home</option>\n                        <option>Mobile</option>\n                        <option>Work</option>\n                      </select>\n                    </div>\n                  </fieldset>\n                </div>\n                <div className=\"flex-row\">\n                  <fieldset>\n                    <label htmlFor=\"form-input-action1\">Add-on button</label>\n                    <div className=\"input--add-on\">\n                      <input type=\"text\" className=\"add-on--before\" id=\"form-input-action1\"/>\n                      <input type=\"submit\" className=\"button button--green add-on--after\" value=\"Submit\" />\n                    </div>\n                  </fieldset>\n                  <fieldset>\n                    <label htmlFor=\"form-input-action4\">Add-on border icon</label>\n                    <div className=\"input--add-on\">\n                      <input type=\"text\" className=\"add-on--before\" id=\"form-input-action4\"/>\n                      <button className=\"button--icon button--border add-on--after\">\n                        <i className=\"dashing-icon dashing-icon--search\"></i>\n                      </button>\n                    </div>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n            <CodeToggle>\n\n{`<!-- This is an example of an add-on -->\n<div class=\"card\">\n<div class=\"card-content flex-content\">\n  <div class=\"flex-row\">\n    <fieldset class=\"select--has-icon\">\n      <label for=\"form-input-group\">Input Group</label>\n      <div class=\"input--add-on\">\n        <input type=\"text\" class=\"add-on--before\" id=\"form-input-group\" placeholder=\"e.g. (481) 516-2342\"/>\n        <select type=\"text\" class=\"add-on--after\">\n          <option>Home</option>\n          <option>Mobile</option>\n          <option>Work</option>\n        </select>\n      </div>\n    </fieldset>\n  </div>\n  <div class=\"flex-row\">\n    <fieldset>\n      <label for=\"form-input-action1\">Add-on button</label>\n      <div class=\"input--add-on\">\n        <input type=\"text\" class=\"add-on--before\" id=\"form-input-action1\"/>\n        <input type=\"submit\" class=\"button button--green add-on--after\" value=\"Submit\" />\n      </div>\n    </fieldset>\n    <fieldset>\n      <label for=\"form-input-action4\">Add-on border icon</label>\n      <div class=\"input--add-on\">\n        <input type=\"text\" class=\"add-on--before\" id=\"form-input-action4\"/>\n        <button class=\"button--icon button--border add-on--after\">\n          <i class=\"dashing-icon dashing-icon--search\"></i>\n        </button>\n      </div>\n    </fieldset>\n  </div>\n</div>\n</div>`}\n            </CodeToggle>\n          </div>\n\n          <h2 className=\"mt-space-xl\" id=\"inputMessageStates\">Input Message States\n            <Link to={location.pathname + \"/#inputMessageStates\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n          <div className=\"example-container\">\n            <div className=\"card\">\n              <div className=\"card-content\">\n                <fieldset>\n                  <label htmlFor=\"text-message\">Text Input with message</label>\n                  <input type=\"text\" id=\"text-message\"/>\n                  <div className=\"message\">Default messages can be used to give additional information about an input.</div>\n                </fieldset>\n\n                <fieldset className=\"has-error\">\n                  <label htmlFor=\"text-error\">Text Input with error</label>\n                  <input type=\"text\" id=\"text-error\"/>\n                  <div className=\"message\">Error messages are used to explain system failures or user errors.</div>\n                </fieldset>\n\n                <fieldset className=\"has-warning\">\n                  <label htmlFor=\"text-warning\">Text Input with warning</label>\n                  <input type=\"text\" id=\"text-warning\"/>\n                  <div className=\"message\">Use warnings to convey important messages to your user.</div>\n                </fieldset>\n              </div>\n            </div>\n\n          <CodeToggle>\n{`<!-- Default Message -->\n<div class=\"card\">\n<div class=\"card-content\">\n  <fieldset>\n    <label for=\"text-message\">Text Input with message</label>\n    <input type=\"text\" id=\"text-message\"/>\n    <div class=\"message\">Default messages can be used to give additional information about an input.</div>\n  </fieldset>\n\n  <fieldset class=\"has-error\">\n    <label for=\"text-error\">Text Input with error</label>\n    <input type=\"text\" id=\"text-error\"/>\n    <div class=\"message\">Error messages are used to explain system failures or user errors.</div>\n  </fieldset>\n\n  <fieldset class=\"has-warning\">\n    <label for=\"text-warning\">Text Input with warning</label>\n    <input type=\"text\" id=\"text-warning\"/>\n    <div class=\"message\">Use warnings to convey important messages to your user.</div>\n  </fieldset>\n</div>\n</div>`}\n              </CodeToggle>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"otherSupportedInputTypes\">Other Supported Input Types\n              <Link to={location.pathname + \"/#otherSupportedInputTypes\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <fieldset>\n                    <label htmlFor=\"date\">Date</label>\n                    <input type=\"date\" id=\"date\"/>\n                  </fieldset>\n\n                  <fieldset>\n                    <label htmlFor=\"time\">Time</label>\n                    <input type=\"time\" id=\"time\"/>\n                  </fieldset>\n\n                  <fieldset>\n                    <label htmlFor=\"month\">Month</label>\n                    <input type=\"month\" id=\"month\"/>\n                  </fieldset>\n\n                  <fieldset>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" placeholder=\"e.g. ryan@fitzinator.com\"/>\n                  </fieldset>\n\n                  <fieldset>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\"/>\n                  </fieldset>\n\n                  <fieldset>\n                    <label htmlFor=\"number\">Number</label>\n                    <input type=\"number\" id=\"number\"/>\n                  </fieldset>\n\n                  <fieldset>\n                    <label htmlFor=\"tel\">Tel</label>\n                    <input type=\"tel\" id=\"tel\"/>\n                  </fieldset>\n\n                  <fieldset>\n                    <label htmlFor=\"file\">File</label>\n                    <input type=\"file\" id=\"file\"/>\n                  </fieldset>\n                </div>\n              </div>\n              <CodeToggle>\n{`<div class=\"card\">\n<div class=\"card-content\">\n  <fieldset>\n    <label for=\"date\">Date</label>\n    <input type=\"date\" id=\"date\"/>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"time\">Time</label>\n    <input type=\"time\" id=\"time\"/>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"month\">Month</label>\n    <input type=\"month\" id=\"month\"/>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"email\">Email</label>\n    <input type=\"email\" id=\"email\" placeholder=\"e.g. ryan@fitzinator.com\"/>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" id=\"password\"/>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"number\">Number</label>\n    <input type=\"number\" id=\"number\"/>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"tel\">Tel</label>\n    <input type=\"tel\" id=\"tel\"/>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"file\">File</label>\n    <input type=\"file\" id=\"file\"/>\n  </fieldset>\n</div>\n</div>`}\n              </CodeToggle>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"customRangeSlider\">Custom Range Slider\n              <Link to={location.pathname + \"/#customRangeSlider\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p className=\"text-color--red\">Not supported in Internet Explorer</p>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <fieldset className=\"range--custom\">\n                    <label htmlFor=\"range\">Range</label>\n                    <input type=\"range\" id=\"range\"/>\n                  </fieldset>\n                </div>\n              </div>\n\n              <CodeToggle>\n{`<!-- Custom Range Slider -->\n<fieldset class=\"range--custom\">\n<label for=\"range\">Range</label>\n<input type=\"range\" id=\"range\"/>\n</fieldset>`}\n              </CodeToggle>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"formExample\">Form Example\n              <Link to={location.pathname + \"/#formExample\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-header has-border\">\n                  <h2 className=\"no-margin\">Card Header</h2>\n                </div>\n\n                <div className=\"card-content flex-content\">\n                  <div className=\"flex-row\">\n                    <fieldset>\n                      <label htmlFor=\"form-text\">Text Input</label>\n                      <input type=\"text\" id=\"form-text\"/>\n                    </fieldset>\n                    <fieldset>\n                      <label htmlFor=\"form-text2\">Text Input</label>\n                      <input type=\"text\" id=\"form-text2\"/>\n                    </fieldset>\n                  </div>\n                  <div className=\"flex-row\">\n                    <fieldset>\n                      <label htmlFor=\"form-date\">Date Input</label>\n                      <input type=\"date\" id=\"form-date\"/>\n                    </fieldset>\n                    <fieldset className=\"select--has-icon\">\n                      <label htmlfor=\"form-select\">Select</label>\n                      <select id=\"form-select\">\n                        <option>Option 1</option>\n                        <option>Option 2</option>\n                      </select>\n                    </fieldset>\n                    <fieldset className=\"spacer\"></fieldset>\n                  </div>\n                  <div className=\"flex-row\">\n                    <fieldset>\n                      <label htmlFor=\"form-textarea\">Textarea</label>\n                      <textarea id=\"form-textarea\"></textarea>\n                    </fieldset>\n                  </div>\n                </div>\n                <div className=\"card-footer\">\n                  <button className=\"mr-space-xs\">Submit</button>\n                  <button className=\"button--transparent button--gray\">Cancel</button>\n                </div>\n              </div>\n              <CodeToggle>\n{`<!-- Custom Range Slider -->\n<div class=\"card\">\n<div class=\"card-header has-border\">\n  <h2 class=\"no-margin\">Card Header</h2>\n</div>\n\n<div class=\"card-content flex-content\">\n  <div class=\"flex-row\">\n    <fieldset>\n      <label for=\"form-text\">Text Input</label>\n      <input type=\"text\" id=\"form-text\"/>\n    </fieldset>\n    <fieldset>\n      <label for=\"form-text2\">Text Input</label>\n      <input type=\"text\" id=\"form-text2\"/>\n    </fieldset>\n  </div>\n  <div class=\"flex-row\">\n    <fieldset>\n      <label for=\"form-date\">Date Input</label>\n      <input type=\"date\" id=\"form-date\"/>\n    </fieldset>\n    <fieldset class=\"select--has-icon\">\n      <label for=\"form-select\">Select</label>\n      <select id=\"form-select\">\n        <option>Option 1</option>\n        <option>Option 2</option>\n      </select>\n    </fieldset>\n    <fieldset class=\"spacer\"></fieldset>\n  </div>\n  <div class=\"flex-row\">\n    <fieldset>\n      <label for=\"form-textarea\">Textarea</label>\n      <textarea id=\"form-textarea\"></textarea>\n    </fieldset>\n  </div>\n</div>\n<div class=\"card-footer\">\n  <button class=\"mr-space-xs\">Submit</button>\n  <button class=\"button--transparent button--gray\">Cancel</button>\n</div>\n</div>`}\n              </CodeToggle>\n            </div>\n\n        </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default FooterCode;\n"],"sourceRoot":""}