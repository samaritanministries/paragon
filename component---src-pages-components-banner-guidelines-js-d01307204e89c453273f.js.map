{"version":3,"sources":["webpack:///./src/pages/components/banner/guidelines.js","webpack:///./src/components/subnavigation.js"],"names":["currentPageNameLower","toLowerCase","className","pageName","to","style","marginTop","marginBottom","SubNav","getPageName","sectionName","hasReact","getSectionName","replace","partiallyActive","activeClassName","defaultProps"],"mappings":"8FAAA,gFAQMA,EADkB,SACqBC,cAE9B,4BACb,kBAAC,IAAD,KACE,4BAAQC,UAAU,UAChB,4BANkB,UAOlB,kBAAC,IAAD,CAAQC,SAAUH,KAEpB,kBAAC,IAAD,KACE,yBAAKE,UAAU,OACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,SAAb,yLAEA,wBAAIA,UAAU,6CAAd,gBACE,0GAA+E,kBAAC,OAAD,CAAME,GAAG,kCAAT,WAA/E,0DACA,yBAAKF,UAAU,kCACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,2CACb,uBAAGA,UAAU,aAAb,2BAIJ,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,gDACb,uBAAGA,UAAU,aAAb,6BAIJ,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,4CACb,uBAAGA,UAAU,aAAb,6BAIJ,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,4CACb,uBAAGA,UAAU,aAAb,6BAMR,gCAAYA,UAAU,OAAOG,MAAO,CAAEC,UAAW,SAC/C,yDACA,yEAA8C,kBAAC,OAAD,CAAMF,GAAG,0BAAT,SAA9C,6FAGF,wBAAIF,UAAU,8BAAd,aACA,gMACA,yBAAKA,UAAU,iCAAiCG,MAAO,CAAEE,aAAc,SACrE,yBAAKL,UAAU,6BACb,yBAAKA,UAAU,0BACb,mDAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,4CACb,uBAAGA,UAAU,aAAb,qE,kCCvEtB,qCAIMM,EAAS,SAAC,GAAyC,IAEnDC,EAFYN,EAAsC,EAAtCA,SAAUO,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAGnCC,EAAiBF,EAKrB,OAHgB,OAAhBA,IAAuBE,EAAiB,cACxCH,EAAcN,EAASU,QAAQ,OAAQ,KAGrC,yBAAKX,UAAU,gBACb,kBAAC,OAAD,CAAMY,iBAAiB,EAAMC,gBAAgB,SAASX,GAAE,IAAMQ,EAAN,IAAwBH,EAAxB,SAAxD,QACCE,GAAY,kBAAC,OAAD,CAAMG,iBAAiB,EAAMC,gBAAgB,SAASX,GAAE,IAAMQ,EAAN,IAAwBH,EAAxB,cAAxD,SACb,kBAAC,OAAD,CAAMK,iBAAiB,EAAMC,gBAAgB,SAASX,GAAE,IAAMQ,EAAN,IAAwBH,EAAxB,eAAxD,gBAWND,EAAOQ,aAAe,CACpBb,SAAU,IACVO,YAAa,KACbC,UAAU,GAGGH","file":"component---src-pages-components-banner-guidelines-js-d01307204e89c453273f.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\n\nconst currentPageName = \"Banner\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n      <div className=\"row\">\n        <div className=\"column column--full\">\n          <p className=\"intro\">Banners can be used to show important information to a user. Card banners should have text that is directly related to an action that has been completed or is about to be performed.</p>\n\n          <h2 className=\"has-number has-number--one no-margin--top\">Banner Types</h2>\n            <p>Common types of card banners are success, warning, error, and generic. Like <Link to=\"/components/actions/guidelines\">Actions</Link>, banners should use purposeful color when using them.</p>\n            <div className=\"image-container double-padding\">\n              <div className=\"banner-container\">\n                <div className=\"card-info no-margin--top\">\n                  <div className=\"card-content has-icon\">\n                    <i className=\"dashing-icon dashing-icon--info-filled\" />\n                    <p className=\"no-margin\">This is an info card.</p>\n                  </div>\n                </div>\n\n                <div className=\"card-info has-success no-margin--top\">\n                  <div className=\"card-content has-icon\">\n                    <i className=\"dashing-icon dashing-icon--checkmark-filled\" />\n                    <p className=\"no-margin\">This is a success card.</p>\n                  </div>\n                </div>\n\n                <div className=\"card-info has-warning no-margin--top\">\n                  <div className=\"card-content has-icon\">\n                    <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                    <p className=\"no-margin\">This is a warning card.</p>\n                  </div>\n                </div>\n\n                <div className=\"card-info has-error no-margin\">\n                  <div className=\"card-content has-icon\">\n                    <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                    <p className=\"no-margin\">This is a error card.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <blockquote className=\"tips\" style={{ marginTop: \"2rem\" }}>\n              <strong>Tip: Icons in Banners</strong>\n              <p>To add more attention to card banners, use <Link to=\"/components/icons/code\">icons</Link> before the banner text. Banners are setup to automatically add the appropriate spacing.</p>\n            </blockquote>\n\n            <h2 className=\"has-number has-number--two\">Placement</h2>\n            <p>When using a card banner, it can be placed directly under the card header to draw the user's attention right away or close to the action that was just completed.</p>\n            <div className=\"image-container double-padding\" style={{ marginBottom: \"2rem\" }}>\n              <div className=\"card card--example-titles\">\n                <div className=\"card-header has-border\">\n                  <h3>Membership Options</h3>\n                </div>\n                <div className=\"card-content\">\n                  <div className=\"card-info has-error no-margin\">\n                    <div className=\"card-content has-icon\">\n                      <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                      <p className=\"no-margin\">There was an error saving your Membership information.</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n        </div>\n      </div>\n    </AppContent>\n  </Layout>\n)\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n"],"sourceRoot":""}