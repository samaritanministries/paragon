{"version":3,"sources":["webpack:///./src/pages/components/tooltip/code.js"],"names":["currentPageNameLower","toLowerCase","TooltipCode","render","location","this","props","className","pageName","style","borderRadius","href","target","rel","id","to","pathname","content","display","disabled","React","Component"],"mappings":"gNAWMA,EADkB,UACqBC,cAEvCC,E,kGAGJC,OAAA,WAAU,IACAC,EAAaC,KAAKC,MAAlBF,SAER,OACE,kBAAC,IAAD,KACE,4BAAQG,UAAU,UAChB,4BAZc,WAad,kBAAC,IAAD,CAAQC,SAAUR,KAEpB,kBAAC,IAAD,KACE,yBAAKO,UAAU,qBAEb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,0BAA0BE,MAAO,CAAEC,aAAc,QAC9D,uBAAGH,UAAU,4CACb,sFAKN,oDACA,uBAAGA,UAAU,qBAAb,wBAAsD,uBAAGI,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAjE,YAAtD,yFACA,wBAAIN,UAAU,aACZ,4BAAI,uBAAGI,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAjE,qBACJ,4BAAI,uBAAGF,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBAAvE,6BACJ,4BAAI,uBAAGF,KAAK,iBAAR,sCAGN,wBAAIJ,UAAU,cAAcO,GAAG,kBAA/B,kBACE,kBAAC,OAAD,CAAMC,GAAIX,EAASY,SAAW,mBAAoBT,UAAU,kDAE9D,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,yBACb,0CACA,kBAAC,IAAD,CAASU,QAAQ,iBACf,uBAAGV,UAAU,sBAKjB,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAASU,QAAQ,8CACf,0BAAMR,MAAO,CAAES,QAAS,iBACtB,4BAAQX,UAAU,SAASY,UAAQ,GAAnC,yBAUV,kBAAC,IAAD,qbAmBF,wBAAIZ,UAAU,cAAcO,GAAG,kBAA/B,eACE,kBAAC,OAAD,CAAMC,GAAIX,EAASY,SAAW,mBAAoBT,UAAU,kDAE9D,8LACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAiBU,QAAQ,UACvB,4BAAQV,UAAU,uDAChB,uBAAGA,UAAU,uCAGjB,kBAAC,IAAD,CAAiBU,QAAQ,OACvB,4BAAQV,UAAU,0CAChB,uBAAGA,UAAU,wCAOvB,kBAAC,IAAD,saAgBF,wBAAIA,UAAU,cAAcO,GAAG,gBAA/B,wBACE,kBAAC,OAAD,CAAMC,GAAIX,EAASY,SAAW,iBAAkBT,UAAU,kDAE5D,oGAEA,yBAAKA,UAAU,aACb,kBAAC,IAAD,yhB,GA5HYa,IAAMC,WA8JjBnB","file":"component---src-pages-components-tooltip-code-js-a05191d4b9c91907af0e.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggleJSX from '../../../components/codetoggle-jsx'\nimport { Tooltip, IconDescription } from '../../../components/tippyComponent'\n\nconst currentPageName = \"Tooltip\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass TooltipCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n\n            <div className=\"card\">\n              <div className=\"card-content no-padding--top no-padding--bottom\">\n                <div className=\"card-banner has-warning\" style={{ borderRadius: \"5px\"}}>\n                  <i className=\"dashing-icon dashing-icon--alert-filled\"></i>\n                  <p>This Component has been built for React applications</p>\n                </div>\n              </div>\n            </div>\n\n            <h2>Tooltip Installation</h2>\n            <p className=\"no-margin--bottom\">Paragon utilizes the <a href=\"https://atomiks.github.io/tippyjs/\" target=\"_blank\" rel=\"noopener noreferrer\">Tippy.js</a> component to deliver tooltips. To use in your project you must import the following:</p>\n            <ul className=\"no-margin\">\n              <li><a href=\"https://github.com/atomiks/tippyjs\" target=\"_blank\" rel=\"noopener noreferrer\">Tippy.js package</a></li>\n              <li><a href=\"https://github.com/atomiks/tippyjs-react\" target=\"_blank\" rel=\"noopener noreferrer\">Tippy.js react component</a></li>\n              <li><a href=\"#defaultProps\">Custom Paragon Tooltip Component</a></li>\n            </ul>\n\n            <h2 className=\"mt-space-xl\" id=\"defaultTooltip\">Default Tooltip\n              <Link to={location.pathname + \"/#defaultTooltip\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n\n                  <div className=\"grid-full mb-space-xl\">\n                    <span>Tooltip </span>\n                    <Tooltip content=\"Hello Tooltip\">\n                      <i className=\"paragon-tooltip\"></i>\n                    </Tooltip>\n\n                  </div>\n\n                  <div className=\"grid-full\">\n                    <Tooltip content=\"You cannot delete the Primary Phone Number\">\n                      <span style={{ display: \"inline-block\" }}>\n                        <button className=\"button\" disabled>\n                          This is Disabled\n                        </button>\n                      </span>\n                    </Tooltip>\n\n                  </div>\n\n                </div>\n              </div>\n              <CodeToggleJSX>\n{`/* Tooltip */\n<Tooltip content=\"Hello Tooltip\">\n  <i className=\"paragon-tooltip\"></i>\n</Tooltip>\n\n/* Tooltip on Disabled Button */\n/*  You must wrap a tag around the disabled button to utilize a tooltip */\n<Tooltip content=\"You cannot delete the Primary Phone Number\">\n  <span style={{ display: \"inline-block\" }}>\n    <button className=\"button\" disabled>\n      This is Disabled\n    </button>\n  </span>\n</Tooltip>\n`}\n              </CodeToggleJSX>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"defaultTooltip\">Icon Tooltip\n              <Link to={location.pathname + \"/#defaultTooltip\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p>Icon tooltips can be used to give the user more information about an action that is only represented by an icon. They are built to show after a 1 second delay.</p>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n\n                  <div className=\"grid-full\">\n                    <IconDescription content=\"Delete\">\n                      <button className=\"button button--red button--icon button--transparent\">\n                        <i className=\"dashing-icon dashing-icon--trash\"></i>\n                      </button>\n                    </IconDescription>\n                    <IconDescription content=\"Add\">\n                      <button className=\"button button--icon button--icon--main\">\n                        <i className=\"dashing-icon dashing-icon--add\"></i>\n                      </button>\n                    </IconDescription>\n                  </div>\n\n                </div>\n              </div>\n              <CodeToggleJSX>\n{`/* Icon Description */\n<IconDescription content=\"Delete\">\n  <button className=\"button button--red button--icon button--transparent\">\n    <i className=\"dashing-icon dashing-icon--trash\"></i>\n  </button>\n</IconDescription>\n<IconDescription content=\"Add\">\n  <button className=\"button button--icon button--icon--main\">\n    <i className=\"dashing-icon dashing-icon--add\"></i>\n  </button>\n</IconDescription>\n`}\n              </CodeToggleJSX>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"defaultProps\">Tooltip Default Props\n              <Link to={location.pathname + \"/#defaultProps\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p>Below are the Default Props we have assigned to tooltip's in Paragon.</p>\n\n            <div className=\"show-code\">\n              <CodeToggleJSX>\n{`/* Tooltip Default Props */\nexport const Tooltip = props => <Tippy {...props} />\nTooltip.defaultProps = {\n  animation: 'fade',\n  boundary: 'viewport',\n  arrow: roundArrow,\n  theme: 'default',\n  maxWidth: 250,\n}\n\n/* Icon Description Default Props */\nexport const IconDescription = props => <Tippy {...props} />\nIconDescription.defaultProps = {\n  animation: 'fade',\n  placement: 'bottom',\n  boundary: 'viewport',\n  arrow: false,\n  theme: 'default',\n  maxWidth: 250,\n  delay: [1000, 0],\n  distance: 5,\n}\n`}\n              </CodeToggleJSX>\n            </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default TooltipCode;\n"],"sourceRoot":""}