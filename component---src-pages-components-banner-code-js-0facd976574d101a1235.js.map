{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js","webpack:///./src/components/subnavigation.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./src/pages/components/banner/code.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./src/components/codetoggle.js"],"names":["self","Prism","global","a","e","t","plugins","customClass","add","n","map","s","prefix","hooks","content","type","language","Array","isArray","classes","push","apply","SubNav","getPageName","pageName","sectionName","hasReact","getSectionName","replace","className","partiallyActive","activeClassName","to","defaultProps","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","currentPageNameLower","toLowerCase","BannerCode","render","location","this","props","id","pathname","href","style","marginLeft","React","Component","i","util","clone","javascript","jsx","tag","spread","punctuation","script","o","join","p","length","tagName","pop","openedBraces","g","splice","Token","tokens","CodeToggle","state","showCode","toggleCode","bind","componentDidMount","highlightAll","setState","prevState","children","onClick"],"mappings":"gFAAA,wBACE,GAAI,oBAAsBA,MAAQA,KAAKC,YAAS,IAAsBC,GAAUA,EAAOD,MAAO,CAC5F,IAAIE,EACAC,EACAC,EAAI,GACRJ,MAAMK,QAAQC,YAAc,CAC1BC,IAAK,SAAaC,GAChBN,EAAIM,GAENC,IAAK,SAAaC,GAChBP,EAAI,mBAAqBO,EAAIA,EAAI,SAAUF,GACzC,OAAOE,EAAEF,IAAMA,IAGnBG,OAAQ,SAAgBH,GACtBJ,EAAII,GAAK,KAEVR,MAAMY,MAAML,IAAI,QAAQ,SAAUG,GACnC,GAAIR,EAAG,CACL,IAAIM,EAAIN,EAAE,CACRW,QAASH,EAAEG,QACXC,KAAMJ,EAAEI,KACRC,SAAUL,EAAEK,WAEdC,MAAMC,QAAQT,GAAKE,EAAEQ,QAAQC,KAAKC,MAAMV,EAAEQ,QAASV,GAAKA,GAAKE,EAAEQ,QAAQC,KAAKX,IAG7EL,GAAKC,KAAOM,EAAEQ,QAAUR,EAAEQ,QAAQT,KAAI,SAAUD,GAC/C,OAAOJ,GAAKD,EAAIA,EAAEK,EAAGE,EAAEK,UAAYP,WA5B3C,K,wDCAA,qCAIMa,EAAS,SAAC,GAAyC,IAEnDC,EAFYC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAGnCC,EAAiBF,EAKrB,OAHgB,OAAhBA,IAAuBE,EAAiB,cACxCJ,EAAcC,EAASI,QAAQ,OAAQ,KAGrC,yBAAKC,UAAU,gBACb,kBAAC,OAAD,CAAMC,iBAAiB,EAAMC,gBAAgB,SAASC,GAAE,IAAML,EAAN,IAAwBJ,EAAxB,SAAxD,QACCG,GAAY,kBAAC,OAAD,CAAMI,iBAAiB,EAAMC,gBAAgB,SAASC,GAAE,IAAML,EAAN,IAAwBJ,EAAxB,cAAxD,SACb,kBAAC,OAAD,CAAMO,iBAAiB,EAAMC,gBAAgB,SAASC,GAAE,IAAML,EAAN,IAAwBJ,EAAxB,eAAxD,gBAWND,EAAOW,aAAe,CACpBT,SAAU,IACVC,YAAa,KACbC,UAAU,GAGGJ,O,mBCjCfrB,MAAMiC,UAAUC,KAAOlC,MAAMiC,UAAUE,OAAO,MAAO,CACnDC,QAAS,CACPC,QAAS,uCACTC,YAAY,GAEdC,OAAQ,CACNF,QAAS,sDACTG,OAAQ,CACNC,KAAM,YAGVC,IAAK,0BACLC,SAAU,CACRN,QAAS,mGACTG,OAAQ,CACNI,OAAQ,CACNP,QAAS,IACTQ,MAAO,aAETC,YAAa,UACbC,SAAU,2BAGdC,SAAU,CACRX,QAAS,2CACTG,OAAQ,CACNO,SAAU,6BAGZ/C,MAAMiC,UAAUgB,aAAa,OAAQ,SAAU,CACjDC,QAAS,CAAC,oHAAqH,CAC7Hb,QAAS,4BACTC,YAAY,MAEZtC,MAAMiC,UAAUgB,aAAa,OAAQ,YAAa,CACpDF,SAAU,2BACR/C,MAAMiC,UAAUgB,aAAa,OAAQ,WAAY,CACnD,kBAAmB,CACjBZ,QAAS,6BACTQ,MAAO,WAETC,YAAa,CACXT,QAAS,UACTQ,MAAO,YAETM,UAAW,CACTd,QAAS,6BACTQ,MAAO,WAETO,QAAS,qBACTC,KAAM,CACJhB,QAAS,WACTQ,MAAO,WAETS,SAAU,CACRjB,QAAS,kDACTC,YAAY,KAEZtC,MAAMiC,UAAUC,KAAKK,OAAOC,OAAOe,KAAOvD,MAAMiC,UAAUC,M,0IChDxDsB,EADkB,SACqBC,cAEvCC,E,kGAGJC,OAAA,WAAU,IACAC,EAAaC,KAAKC,MAAlBF,SAER,OACE,kBAAC,IAAD,KACE,4BAAQhC,UAAU,UAChB,4BAZc,UAad,kBAAC,IAAD,CAAQL,SAAUiC,KAEpB,kBAAC,IAAD,KACE,yBAAK5B,UAAU,qBAEb,uBAAGA,UAAU,SAAb,yLAEA,wBAAImC,GAAG,qBAAP,sBACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,sBAAuBpC,UAAU,kDAEjE,yBAAKA,UAAU,qBACb,4BAAQA,UAAU,uEAChB,yBAAKA,UAAU,iBACf,uBAAGA,UAAU,4CACb,8DAAmC,uBAAGqC,KAAK,WAAR,UAAnC,OAIF,kBAAC,IAAD,iSAWF,wBAAIF,GAAG,uBAAP,wBACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,wBAAyBpC,UAAU,kDAEnE,yBAAKA,UAAU,qBACb,4BAAQA,UAAU,yEAChB,yBAAKA,UAAU,iBACf,uBAAGA,UAAU,2CACb,+DAAoC,uBAAGqC,KAAK,WAAR,UAApC,OAIF,kBAAC,IAAD,wRAYA,wBAAIrC,UAAU,cAAcmC,GAAG,qBAA/B,sBACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,sBAAuBpC,UAAU,kDAEjE,4CAAiB,0BAAMA,UAAU,gBAAhB,aAAjB,OAAoE,0BAAMA,UAAU,gBAAhB,gBAApE,wBACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,+CAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,2CACb,wBAAIA,UAAU,oBAAd,gBAEF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,aAAb,mCAIN,yBAAKA,UAAU,eACb,yFAGJ,kBAAC,IAAD,mTAcF,wBAAIA,UAAU,cAAcmC,GAAG,yBAA/B,2BACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,0BAA2BpC,UAAU,kDAErE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,+CAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,gDACb,wBAAIA,UAAU,oBAAd,YAEF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,aAAb,qCAIN,yBAAKA,UAAU,eACb,4FAGJ,kBAAC,IAAD,kUAaF,wBAAIA,UAAU,cAAcmC,GAAG,yBAA/B,2BACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,0BAA2BpC,UAAU,kDAErE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,+CAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,4CACb,wBAAIA,UAAU,oBAAd,YAEF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,aAAb,qCAIN,yBAAKA,UAAU,eACb,6FAGJ,kBAAC,IAAD,8TAaF,wBAAIA,UAAU,cAAcmC,GAAG,uBAA/B,yBACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,wBAAyBpC,UAAU,kDAEnE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,6CAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,4CACb,wBAAIA,UAAU,oBAAd,UAEF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,aAAb,mCAIN,yBAAKA,UAAU,eACb,kJAGJ,kBAAC,IAAD,wTAaF,wBAAIA,UAAU,cAAcmC,GAAG,wBAA/B,6BACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,yBAA0BpC,UAAU,kDAEpE,4CAAiB,0BAAMA,UAAU,gBAAhB,aAAjB,OAAoE,0BAAMA,UAAU,gBAAhB,iBAApE,wBACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,sDAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAU,4CACb,uBAAGA,UAAU,aAAb,gDAIN,yBAAKA,UAAU,eACb,yHAGJ,kBAAC,IAAD,mUAWF,wBAAIA,UAAU,cAAcmC,GAAG,wBAA/B,0BACE,kBAAC,OAAD,CAAMhC,GAAI6B,EAASI,SAAW,yBAA0BpC,UAAU,kDAEpE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,mDAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,2BACb,uBAAGA,UAAU,aAAb,yBACA,4BAAQd,KAAK,SAASc,UAAU,oDAAoDsC,MAAO,CAAEC,WAAY,SAAzG,iBAIN,yBAAKvC,UAAU,eACb,8HAAmG,0BAAMA,UAAU,gBAAhB,eAAnG,6BAGJ,kBAAC,IAAD,kqB,GApQSwC,IAAMC,WA+RhBX,a,oBC3Sd,SAAUY,GACT,IAAIlE,EAAIkE,EAAEC,KAAKC,MAAMF,EAAErC,UAAUwC,YACjCH,EAAErC,UAAUyC,IAAMJ,EAAErC,UAAUE,OAAO,SAAU/B,GAAIkE,EAAErC,UAAUyC,IAAIC,IAAItC,QAAU,2MAA4MiC,EAAErC,UAAUyC,IAAIC,IAAInC,OAAOmC,IAAItC,QAAU,kBAAmBiC,EAAErC,UAAUyC,IAAIC,IAAInC,OAAO,cAAcH,QAAU,gEAAiEiC,EAAErC,UAAUyC,IAAIC,IAAInC,OAAOmC,IAAInC,OAAO,cAAgB,4BAA6B8B,EAAErC,UAAUgB,aAAa,SAAU,YAAa,CAC9kB2B,OAAQ,CACNvC,QAAS,sDACTG,OAAQ,CACNqC,YAAa,cACb,aAAc,SAGjBP,EAAErC,UAAUyC,IAAIC,KAAML,EAAErC,UAAUgB,aAAa,SAAU,aAAc,CACxE6B,OAAQ,CACNzC,QAAS,iDACTG,OAAQ,CACN,qBAAsB,CACpBH,QAAS,UACTQ,MAAO,eAETU,KAAMe,EAAErC,UAAUyC,KAEpB7B,MAAO,wBAERyB,EAAErC,UAAUyC,IAAIC,KAEnB,IAAII,EAAI,SAASA,EAAE3E,GACjB,OAAOA,EAAI,iBAAmBA,EAAIA,EAAI,iBAAmBA,EAAES,QAAUT,EAAES,QAAUT,EAAES,QAAQJ,IAAIsE,GAAGC,KAAK,IAAM,IAmB/GV,EAAE1D,MAAML,IAAI,kBAAkB,SAAUH,GACtC,QAAUA,EAAEW,UAAY,QAAUX,EAAEW,UAlB9B,SAASkE,EAAE7E,GACjB,IAAK,IAAII,EAAI,GAAIL,EAAI,EAAGA,EAAIC,EAAE8E,OAAQ/E,IAAK,CACzC,IAAID,EAAIE,EAAED,GACNO,GAAI,EAER,GAAI,iBAAmBR,IAAM,QAAUA,EAAEY,MAAQZ,EAAEW,QAAQ,IAAM,QAAUX,EAAEW,QAAQ,GAAGC,KAAO,OAASZ,EAAEW,QAAQ,GAAGA,QAAQ,GAAGA,QAAU,EAAIL,EAAE0E,QAAU1E,EAAEA,EAAE0E,OAAS,GAAGC,UAAYJ,EAAE7E,EAAEW,QAAQ,GAAGA,QAAQ,KAAOL,EAAE4E,MAAQ,OAASlF,EAAEW,QAAQX,EAAEW,QAAQqE,OAAS,GAAGrE,SAAWL,EAAEW,KAAK,CACvRgE,QAASJ,EAAE7E,EAAEW,QAAQ,GAAGA,QAAQ,IAChCwE,aAAc,IACX,EAAI7E,EAAE0E,QAAU,gBAAkBhF,EAAEY,MAAQ,MAAQZ,EAAEW,QAAUL,EAAEA,EAAE0E,OAAS,GAAGG,eAAiB,EAAI7E,EAAE0E,QAAU,EAAI1E,EAAEA,EAAE0E,OAAS,GAAGG,cAAgB,gBAAkBnF,EAAEY,MAAQ,MAAQZ,EAAEW,QAAUL,EAAEA,EAAE0E,OAAS,GAAGG,eAAiB3E,GAAI,IAAMA,GAAK,iBAAmBR,IAAM,EAAIM,EAAE0E,QAAU,IAAM1E,EAAEA,EAAE0E,OAAS,GAAGG,aAAc,CACrU,IAAIC,EAAIP,EAAE7E,GACVC,EAAIC,EAAE8E,OAAS,IAAM,iBAAmB9E,EAAED,EAAI,IAAM,eAAiBC,EAAED,EAAI,GAAGW,QAAUwE,GAAKP,EAAE3E,EAAED,EAAI,IAAKC,EAAEmF,OAAOpF,EAAI,EAAG,IAAK,EAAIA,IAAM,iBAAmBC,EAAED,EAAI,IAAM,eAAiBC,EAAED,EAAI,GAAGW,QAAUwE,EAAIP,EAAE3E,EAAED,EAAI,IAAMmF,EAAGlF,EAAEmF,OAAOpF,EAAI,EAAG,GAAIA,KAAMC,EAAED,GAAK,IAAImE,EAAEkB,MAAM,aAAcF,EAAG,KAAMA,GAGvSpF,EAAEW,SAAW,iBAAmBX,EAAEW,SAAWoE,EAAE/E,EAAEW,UAKHoE,CAAE7E,EAAEqF,WA7CvD,CA+CCzF,Q,wGCxCI0F,G,0CAEJ,WAAY5B,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACK6B,MAAQ,CAAEC,UAAU,GACzB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAHD,E,4CAMnBC,kBAAA,WACE/F,IAAMgG,gB,EAGRH,WAAA,WACEhC,KAAKoC,UAAS,SAACC,GAAD,MAAgB,CAC5BN,UAAWM,EAAUN,c,EAIzBjC,OAAA,WAAU,IAAD,EACwBE,KAAKC,MAA5BqC,EADD,EACCA,SAAUpF,EADX,EACWA,SACV6E,EAAa/B,KAAK8B,MAAlBC,SAGR,OAFA5F,IAAMK,QAAQC,YAAYG,IAAI,CAAEkE,IAAK,eAGnC,yBAAK/C,UAAWgE,EAAW,aAAe,IACxC,yBAAKQ,QAASvC,KAAKgC,WAAYjE,UAAWgE,EAAW,sBAAwB,eAC3E,uBAAGhE,UAAU,gBAEf,yBAAKA,UAAWgE,EAAQ,YAAe7E,EAAf,oBAA6CA,GACnE,0BAAMa,UAAWgE,EAAQ,YAAe7E,EAAf,oBAA6CA,GAAaoF,M,GA7BpE/B,IAAMC,YA0C/BqB,EAAW1D,aAAe,CACxBmE,SAAU,UACVpF,SAAU,QAGG2E","file":"component---src-pages-components-banner-code-js-0facd976574d101a1235.js","sourcesContent":["!function () {\n  if (\"undefined\" != typeof self && self.Prism || \"undefined\" != typeof global && global.Prism) {\n    var a,\n        e,\n        t = \"\";\n    Prism.plugins.customClass = {\n      add: function add(n) {\n        a = n;\n      },\n      map: function map(s) {\n        e = \"function\" == typeof s ? s : function (n) {\n          return s[n] || n;\n        };\n      },\n      prefix: function prefix(n) {\n        t = n || \"\";\n      }\n    }, Prism.hooks.add(\"wrap\", function (s) {\n      if (a) {\n        var n = a({\n          content: s.content,\n          type: s.type,\n          language: s.language\n        });\n        Array.isArray(n) ? s.classes.push.apply(s.classes, n) : n && s.classes.push(n);\n      }\n\n      (e || t) && (s.classes = s.classes.map(function (n) {\n        return t + (e ? e(n, s.language) : n);\n      }));\n    });\n  }\n}();","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n","Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)?url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  \"module-modifier\": {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: \"keyword\"\n  },\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Banner\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass BannerCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n\n            <p className=\"intro\">Banners can be used to show important information to a user. Card banners should have text that is directly related to an action that has been completed or is about to be performed.</p>\n\n            <h2 id=\"globalErrorBanner\">Global Error Banner\n              <Link to={location.pathname + \"/#globalErrorBanner\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <header className=\"global-banner-container has-error global-banner--example mb-space-m\">\n                <div className=\"global-banner\">\n              \t\t<i className=\"dashing-icon dashing-icon--alert-filled\" />\n              \t\t<p>This is an error banner with an <a href=\"../code\">action</a>.</p>\n                </div>\n            \t</header>\n\n              <CodeToggle>\n{`<!-- Use has-error for error banners -->\n  <header class=\"global-banner-container has-error\">\n    <div class=\"global-banner\">\n      <i class=\"dashing-icon dashing-icon--info-filled\" />\n      <p>This is an error banner with an <a>action</a>.</p>\n    </div>\n  </header>`}\n              </CodeToggle>\n            </div>\n\n            <h2 id=\"globalWarningBanner\">Global Warning Banner\n              <Link to={location.pathname + \"/#globalWarningBanner\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <header className=\"global-banner-container has-warning global-banner--example mb-space-m\">\n                <div className=\"global-banner\">\n              \t\t<i className=\"dashing-icon dashing-icon--info-filled\" />\n              \t\t<p>This is a warning banner with an <a href=\"../code\">action</a>.</p>\n                </div>\n            \t</header>\n\n              <CodeToggle>\n{`<!-- Use has-error for error banners -->\n<header class=\"global-banner-container has-warning\">\n  <div class=\"global-banner\">\n    <i class=\"dashing-icon dashing-icon--info-filled\" />\n    <p>This is a warning banner with an <a>action</a>.</p>\n  </div>\n</header>`}\n              </CodeToggle>\n            </div>\n\n\n              <h2 className=\"mt-space-xl\" id=\"defaultCardBanner\">Default Card Banner\n                <Link to={location.pathname + \"/#defaultCardBanner\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <p>Add the class <code className=\"example-text\">.has-icon</code> to <code className=\"example-text\">.card-header</code> when using an icon.</p>\n              <div className=\"example-container\">\n                <div className=\"card\">\n                  <div className=\"card-header has-border\">\n                    <h3>Default Banner</h3>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-info no-margin\">\n                      <div className=\"card-header has-icon\">\n                        <i className=\"dashing-icon dashing-icon--info-filled\" />\n                        <h4 className=\"card-info--title\">Please Note</h4>\n                      </div>\n                      <div className=\"card-content\">\n                        <p className=\"no-margin\">This is an info card banner.</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-footer\">\n                    <p>Use a banner within a card to display additional context</p>\n                  </div>\n                </div>\n                <CodeToggle>\n{`<div class=\"card-info no-margin\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--info-filled\" />\n    <h4 class=\"card-info--title\">Please Note</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is an info card banner.</p>\n  </div>\n</div>`}\n                </CodeToggle>\n              </div>\n\n\n              <h2 className=\"mt-space-xl\" id=\"cardBannerWithSuccess\">Card Banner with success\n                <Link to={location.pathname + \"/#cardBannerWithSuccess\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <div className=\"example-container\">\n                <div className=\"card\">\n                  <div className=\"card-header has-border\">\n                    <h3>Success Banner</h3>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-info has-success no-margin\">\n                      <div className=\"card-header has-icon\">\n                        <i className=\"dashing-icon dashing-icon--checkmark-filled\" />\n                        <h4 className=\"card-info--title\">Success</h4>\n                      </div>\n                      <div className=\"card-content\">\n                        <p className=\"no-margin\">This is a success card banner.</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-footer\">\n                    <p>Use success banners to notify users of a successful action.</p>\n                  </div>\n                </div>\n                <CodeToggle>\n{`<div class=\"card-info has-success no-margin\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--checkmark-filled\" />\n    <h4 class=\"card-info--title\">Success</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is a success card banner.</p>\n  </div>\n</div>`}\n                </CodeToggle>\n              </div>\n\n              <h2 className=\"mt-space-xl\" id=\"cardBannerWithWarning\">Card Banner with warning\n                <Link to={location.pathname + \"/#cardBannerWithWarning\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <div className=\"example-container\">\n                <div className=\"card\">\n                  <div className=\"card-header has-border\">\n                    <h3>Warning Banner</h3>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-info has-warning no-margin\">\n                      <div className=\"card-header has-icon\">\n                        <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                        <h4 className=\"card-info--title\">Warning</h4>\n                      </div>\n                      <div className=\"card-content\">\n                        <p className=\"no-margin\">This is a warning card banner.</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-footer\">\n                    <p>Use warning banners to inform your user of potential errors.</p>\n                  </div>\n                </div>\n                <CodeToggle>\n{`<div class=\"card-info has-warning no-margin\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--alert-filled\" />\n    <h4 class=\"card-info--title\">Warning</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is a warning card banner.</p>\n  </div>\n</div>`}\n                </CodeToggle>\n              </div>\n\n              <h2 className=\"mt-space-xl\" id=\"cardBannerWithError\">Card Banner with error\n                <Link to={location.pathname + \"/#cardBannerWithError\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <div className=\"example-container\">\n                <div className=\"card\">\n                  <div className=\"card-header has-border\">\n                    <h3>Error Banner</h3>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-info has-error no-margin\">\n                      <div className=\"card-header has-icon\">\n                        <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                        <h4 className=\"card-info--title\">Error</h4>\n                      </div>\n                      <div className=\"card-content\">\n                        <p className=\"no-margin\">This is a error card banner.</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-footer\">\n                    <p>Use error banners to display critical and important information to your user after they have performed an action.</p>\n                  </div>\n                </div>\n                <CodeToggle>\n{`<div class=\"card-info has-error no-margin\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--alert-filled\" />\n    <h4 class=\"card-info--title\">Error</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is a error card banner.</p>\n  </div>\n</div>`}\n                </CodeToggle>\n              </div>\n\n              <h2 className=\"mt-space-xl\" id=\"cardBannerWithButton\">Card Banner without header\n                <Link to={location.pathname + \"/#cardBannerWithButton\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <p>Add the class <code className=\"example-text\">.has-icon</code> to <code className=\"example-text\">.card-content</code> when using an icon.</p>\n              <div className=\"example-container\">\n                <div className=\"card\">\n                  <div className=\"card-header has-border\">\n                    <h3>Banner without header</h3>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-info no-margin\">\n                      <div className=\"card-content has-icon\">\n                        <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                        <p className=\"no-margin\">This is an error card banner with a icon.</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-footer\">\n                    <p>Card banners can be used without a title when that additional information is not needed.</p>\n                  </div>\n                </div>\n                <CodeToggle>\n{`<!-- .has-icon is added to .card-content to give appropriate display and spacing -->\n<div class=\"card-info no-margin\">\n  <div class=\"card-content has-icon\">\n    <i class=\"dashing-icon dashing-icon--alert-filled\" />\n    <p class=\"no-margin\">This is an error card banner with a icon.</p>\n  </div>\n</div>`}\n                </CodeToggle>\n              </div>\n\n              <h2 className=\"mt-space-xl\" id=\"cardBannerWithButton\">Card Banner with button\n                <Link to={location.pathname + \"/#cardBannerWithButton\"} className=\"button button--transparent button--copy-link\"></Link>\n              </h2>\n              <div className=\"example-container\">\n                <div className=\"card\">\n                  <div className=\"card-header has-border\">\n                    <h3>Banner with Button</h3>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-info no-margin\">\n                      <div className=\"card-content has-button\">\n                        <p className=\"no-margin\">This is a card banner</p>\n                        <button type=\"button\" className=\"button button--border button--blue button--smooth\" style={{ marginLeft: \"auto\" }}>Learn More</button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-footer\">\n                    <p>Use a banner within a card to display additional context. If you have a button make sure to add <code className=\"example-text\">.has-button</code> to reduce the padding.</p>\n                  </div>\n                </div>\n                <CodeToggle>\n{`<div class=\"card\">\n  <div class=\"card-header\">\n    <h3>Banner with Button</h3>\n  </div>\n  <div class=\"card-content\">\n    <div class=\"card-info no-margin\">\n      <div class=\"card-content has-button\">\n        <p class=\"no-margin\">This is a card banner</p>\n        <button type=\"button\" class=\"button button--border button--blue button--smooth\" style={{ marginLeft: \"auto\" }}>Learn More</button>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-footer\">\n    <p>Use a banner within a card to display additional context. If you have a button make sure to add <code class=\"example-text\">.has-button</code> to reduce the padding.</p>\n  </div>\n</div>`}\n                </CodeToggle>\n              </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default BannerCode;\n","!function (i) {\n  var t = i.util.clone(i.languages.javascript);\n  i.languages.jsx = i.languages.extend(\"markup\", t), i.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i, i.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, i.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i, i.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, i.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, i.languages.jsx.tag), i.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: i.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, i.languages.jsx.tag);\n\n  var o = function o(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(o).join(\"\") : \"\";\n  },\n      p = function p(t) {\n    for (var n = [], e = 0; e < t.length; e++) {\n      var a = t[e],\n          s = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < n.length && n[n.length - 1].tagName === o(a.content[0].content[1]) && n.pop() : \"/>\" === a.content[a.content.length - 1].content || n.push({\n        tagName: o(a.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n.length && \"punctuation\" === a.type && \"{\" === a.content ? n[n.length - 1].openedBraces++ : 0 < n.length && 0 < n[n.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? n[n.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof a) && 0 < n.length && 0 === n[n.length - 1].openedBraces) {\n        var g = o(a);\n        e < t.length - 1 && (\"string\" == typeof t[e + 1] || \"plain-text\" === t[e + 1].type) && (g += o(t[e + 1]), t.splice(e + 1, 1)), 0 < e && (\"string\" == typeof t[e - 1] || \"plain-text\" === t[e - 1].type) && (g = o(t[e - 1]) + g, t.splice(e - 1, 1), e--), t[e] = new i.Token(\"plain-text\", g, null, g);\n      }\n\n      a.content && \"string\" != typeof a.content && p(a.content);\n    }\n  };\n\n  i.hooks.add(\"after-tokenize\", function (t) {\n    \"jsx\" !== t.language && \"tsx\" !== t.language || p(t.tokens);\n  });\n}(Prism);","import React from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/plugins/custom-class/prism-custom-class.min.js\";\nimport \"prismjs/components/prism-jsx.min.js\";\nimport \"prismjs/components/prism-scss.min.js\";\nimport PropTypes from \"prop-types\";\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggleCode() {\n    this.setState((prevState) => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  render() {\n    const { children, language } = this.props;\n    const { showCode } = this.state;\n    Prism.plugins.customClass.map({ tag: \"exampletag\" });\n\n    return (\n      <div className={showCode ? \"group-open\" : \"\"}>\n        <div onClick={this.toggleCode} className={showCode ? \"code-toggle is-open\" : \"code-toggle\"}>\n          <i className=\"icon--code\" />\n        </div>\n        <pre className={showCode ? `language-${language} show` : `language-${language}`}>\n          <code className={showCode ? `language-${language} show` : `language-${language}`}>{children}</code>\n        </pre>\n      </div>\n    );\n  }\n\n}\n\nCodeToggle.propTypes = {\n  children: PropTypes.string,\n  language: PropTypes.string\n};\n\nCodeToggle.defaultProps = {\n  children: \"Default\",\n  language: \"html\"\n};\n\nexport default CodeToggle;\n"],"sourceRoot":""}