{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./src/components/subnavigation.js","webpack:///./src/pages/components/toasts/toast.js","webpack:///./src/components/stillworking.js","webpack:///./src/pages/components/toasts/guidelines.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","SubNav","getPageName","pageName","sectionName","hasReact","getSectionName","replace","className","partiallyActive","activeClassName","to","defaultProps","Toast","message","isError","isSuccess","isWarning","cn","error","success","data-id","undefined","currentPageNameLower","toLowerCase"],"mappings":"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","file":"component---src-pages-components-toasts-guidelines-js-68131519440a6cbbe60a.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n","import cn from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function Toast({ className, message, isError, isSuccess, isWarning }) {\n  return (\n    <div\n      className={cn(\"toast-message\", {\n        [className]: !!className,\n        error: isError,\n        success: isSuccess\n      })}\n      data-id=\"toast-message\"\n    >\n      <i className=\"toast-message--icon\"></i>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nToast.propTypes = {\n  className: PropTypes.string,\n  isError: PropTypes.bool,\n  isSuccess: PropTypes.bool,\n  message: PropTypes.string\n};\n\nToast.defaultProps = {\n  className: undefined,\n  isError: false,\n  isSuccess: false,\n  message: undefined\n};\n\nexport default Toast;\n","import React from \"react\";\n\n//import '../sass/example-page/example-page.scss'\n\nexport default () => (\n  <div className=\"follow-message\">\n    <div className=\"follow-message-inner\">\n      <h3>Coming soon!</h3>\n    </div>\n  </div>\n);\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Toast from './toast'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport StillWorking from '../../../components/stillworking'\n\nconst currentPageName = \"Toasts\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default () => (\n  <Layout>\n    <header className=\"subnav\">\n      <h1>{currentPageName}</h1>\n      <SubNav pageName={currentPageNameLower}/>\n    </header>\n    <AppContent>\n      <div className=\"grid grid-padding\">\n        <p className=\"intro\">Toasts are used to show the user a response to an action they just completed. They appear temporarily toward the bottom of the screen.</p>\n        <h2 className=\"has-number has-number--one no-margin--top\">Toast Content</h2>\n        <p>The amount of text should be limited to one short, concise sentence. A toast only shows for 4 seconds, so it should be quick and easy to read.</p>\n        <div className=\"image-container p-space-xl\">\n          <fieldset>\n            <div className=\"flex-container pb-space-m\">\n              <div className=\"icon-container float-left\">\n                <i className=\"dashing-icon dashing-icon--checkmark-filled dashing-icon--green\"></i>\n              </div>\n              <Toast isSuccess={true} message=\"Address successfully saved\" className=\"toast-message--example mt-space-none\"/>\n            </div>\n            <div className=\"flex-container\">\n              <div className=\"icon-container float-left\">\n                <i className=\"dashing-icon dashing-icon--alert-filled dashing-icon--red\"></i>\n              </div>\n              <Toast isError={true} message=\"The address that you tried to save failed. If you would like to try again, please navigate to your profile page.\" className=\"toast-message--example mt-space-none\"/>\n            </div>\n          </fieldset>\n        </div>\n\n        <h2 className=\"has-number has-number--two\">Importance</h2>\n        <p>Toasts should be used to provide instant feedback to a user after an action. They should not interrupt the user and don't require the user to close them.</p>\n        <p>If you would like to notify the user more permanently, you may use a <Link to=\"/components/banner/code/#defaultCardBanner\">Card Banner</Link>.</p>\n      </div>\n    </AppContent>\n  </Layout>\n)\n"],"sourceRoot":""}