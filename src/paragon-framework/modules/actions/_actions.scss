/* Actions Variables
  =========================================================================== */

$buttons: ".button, button, input[type='submit'], input[type='reset']";
$button-disabled: '&[disabled], &.disabled, &.button--disabled';
$action--focus: var(--color-focus) !default;

/* Actions Extendables
  =========================================================================== */

%action {
	@include user-select(none);
	border: 0;
	cursor: pointer;
	font-size: $font-size-small;
	font-weight: $font-weight-semibold;
	outline: none;
	text-decoration: none;
	text-transform: uppercase;
	transition: all 50ms ease-in-out;
	&:first-of-type { margin-left: 0; } //Clears left margin of first %action element
	&:last-of-type { margin-right: 0; } //Clears right margin of last %action element
	&:hover { opacity: 1;
		transition: all 0.1s ease-in-out; }

	&:focus { box-shadow: 0 0 0 4px $action--focus;
		opacity: 1; }
}

/* Actions Styles
  =========================================================================== */
#{$buttons} {
	@extend %action;
	@extend %button--smooth;
	@include button(var(--button-primary-bg), var(--button-primary-hover), var(--button-primary-text));

	-webkit-font-smoothing: auto;
	font-weight: $font-weight-normal;
	margin: 0.05rem 0.25rem;
	padding: $space-s $space-m;
	text-align: center;

	@media #{$tablet} {
		display: inline-block;
		padding: $space-xs $space-m;
	}

	#{$button-disabled} {
		cursor: default;
		opacity: 0.4;
		pointer-events: none;
	}

	&.button--block {
		display: block;
		width: 100%;

		&:not(:first-child) {
			margin: $space-xs 0 0 0;
		}

		&_phone,
		&_mobile {
			@media #{$phone} {
				display: block;
				width: 100%;

				&:not(:first-child) {
					margin: $space-xs 0 0 0;
				}
			}
			@media #{$tablet} { display: inline-block; }
		}
	}

	//Button Sizes
	&.button--large {
		font-size: $font-size-medium !important;
		padding: 0.6rem 1.2rem;
	}

	&.button--small {
		font-size: $font-size-xsmall !important;
		padding: 0.4rem 0.75rem;
	}

	//Button Color Options
	&.button--blue { @include button(var(--color-accent), var(--color-accent-dark), var(--color-text-invert)); }
	&.button--green { @include button(var(--color-success), var(--color-success-dark), var(--color-text-invert)); }
	&.button--orange { @include button(var(--color-warning), var(--color-warning-dark), var(--color-black)); }
	&.button--purple { @include button(var(--color-primary), var(--color-primary-dark), var(--color-text-invert)); }
	&.button--red { @include button(var(--color-error), var(--color-error-dark), var(--color-text-invert)); }
	//TODO: What to do with white and black buttons? Swap with color mode?
	&.button--white { @include button(var(--color-white), var(--color-gray-1), var(--color-black)); }
	// &.button--black { @include button($color-black, $color-black, $color-white); }

	&.button--gray,
	&.button--grey,
	&.button--secondary { @include button(var(button-gray-bg), var(button-gray-hover), var(button-gray-text)); }

	//Used to display actions and icons with a transparent background
	//transparentize(white, 1) used instead of transparent because "darken" requires an rgb color value
	&.button--transparent {
		@include transparent--button(var(--color-accent));

		&:not(.button--icon) { //Retains button--icon padding
			padding-left: 0.5rem;
			padding-right: 0.5rem;
		}
		&.button--blue { @include transparent--button(var(--color-accent)); }

		&.button--gray,
		&.button--grey,
		&.button--secondary { @include transparent--button(var(--button-gray-text)); }

		&.button--green { @include transparent--button(var(--color-success));
		}
		&.button--red { @include transparent--button(var(--color-error)); }
		&.button--orange { @include transparent--button(var(--color-warning)); }
		&.button--purple { @include transparent--button(var(--color-primary)); }

		&.button--white {
			@include transparent--button(var(--color-white));
			//TODO: What color is this?
			&:hover,
			&:focus { background-color: rgba(0, 0, 0, 0.4) !important; } //custom hover override to better display on dark header color
			&:active { background-color: rgba(0, 0, 0, 0.6) !important; } //custom hover override to better display on dark header color
		}
	}

	&.button--border {
		@include border--button(var(--button-primary-bg), var(button-primary-hover));
		border: 2px solid;
		@media #{$tablet} {
			padding-bottom: calc(0.5rem - 2px);
			padding-left: calc(1rem - 2px);
			padding-right: calc(1rem - 2px);
			padding-top: calc(0.45rem - 2px);
		}
		&.button--blue { @include border--button(var(--color-accent), var(--color-accent-dark)); }
		&.button--green { @include border--button(var(--color-success), var(--color-success-dark)); }
		&.button--red { @include border--button(var(--color-error), var(--color-error-dark)); }
		&.button--orange { @include border--button(var(--color-warning), var(--color-warning-dark)); }
		&.button--purple { @include border--button(var(--color-primary), var(--color-primary-dark)); }

		&.button--gray {
			@include border--button(var(--button-gray-hover), var(--button-gray-hover));
			color: var(button-gray-text);

			&:hover,
			&:focus {
				//TODO: check this
				color: var(--color-text) !important;

				.dashing-icon::before {
					color: var(--color-text) !important;
					transition: all 50ms ease-in-out;
				}
			}
		}

		&.button--white {
			@include border--button(var(--color-white), var(--color-hover));

			&:hover,
			&:focus {
				color: var(--color-black) !important;

				.dashing-icon::before {
					color: var(--color-black) !important;
					transition: all 50ms ease-in-out;
				}
			}
		}
	}

	&.button--round { @extend %button--round; }
	&.button--smooth { @extend %button--smooth; }
	&.button--square { @extend %button--square; }

	//Fixes Firefox alignment
	.dashing-icon.flow-opposite { display: inline-block; }

	//Experimental Ripple Effect
	&.ripple {
		overflow: hidden;
		position: relative;
		transform: translate3d(0, 0, 0);

		&::after {
			background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
			background-position: 50%;
			background-repeat: no-repeat;
			content: '';
			display: block;
			height: 100%;
			left: 0;
			opacity: 0;
			pointer-events: none;
			position: absolute;
			top: 0;
			transform: scale(10, 10);
			transition: transform 0.5s, opacity 1s;
			width: 100%;
		}

		&:active::after {
			opacity: 0.3;
			transform: scale(0, 0);
			transition: 0s;
		}
	}
}

//Used for creating clickable dashing icons
.button--icon {
	border-radius: 50px !important;
	padding: 0.6rem;

	&.button--icon--main {
		@extend %shadow-100;
		padding: $space-m;
		&:active { @extend %shadow-50; }
	}

	&.button--transparent { //makes default transparent button icon gray, rather than blue
		@include transparent--button(var(--color-icon-primary));
	}
}

//Provides margin when a button and action are paired together
.button ~ .action {
	margin-left: 0.5rem;
}
