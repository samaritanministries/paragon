/* Actions Variables
  =========================================================================== */

$buttons: ".button, button, input[type='submit'], input[type='reset']";
$button-disabled: "&[disabled], &.disabled, &.button--disabled";
$action--focus: $blue-300 !default;

/* Actions Extendables
  =========================================================================== */

%action {
  @include user-select(none);
  border: none;
  cursor: pointer;
  font-size: $font-size-small;
  font-weight: $font-weight-semibold;
  outline: none;
  text-transform: uppercase;
  text-decoration: none;
  transition: all 50ms ease-in-out;
  &:first-of-type { margin-left: 0; } //Clears left margin of first %action element
  &:last-of-type { margin-right: 0; } //Clears right margin of last %action element
  &:hover { transition: all .1s ease-in-out; }
  &:focus { box-shadow: 0 0 0 4px $action--focus; }
}

/* Actions Styles
  =========================================================================== */
#{$buttons} {
  @extend %action;
  @extend %button--smooth;
  @include button(var(--btn-primary-bg), var(--btn-primary-hover), var(--btn-primary-text));

  -webkit-font-smoothing: auto;
  font-weight: $font-weight-normal;
  margin: 0.05rem 0.25rem;
  padding: $space-s $space-m;
  text-align: center;

  @media #{$tablet} {
    display: inline-block;
    padding: $space-xs $space-m;
  }

  #{$button-disabled} {
    cursor: default;
    opacity: 0.4;
    pointer-events: none;
  }

  &.button--block {
    display: block;
    width: 100%;
    &:not(:first-child) {
      margin: $space-xs 0 0 0;
    }

    &_phone,
    &_mobile {
      @media #{$phone} {
        display: block;
        width: 100%;
        &:not(:first-child) {
          margin: $space-xs 0 0 0;
        }
      }
      @media #{$tablet} { display: inline-block; }
    }
  }

  //Button Sizes
  &.button--large {
    font-size: $font-size-medium !important;
    padding: 0.6rem 1.2rem;
  }
  &.button--small {
    font-size: $font-size-xsmall !important;
    padding: 0.4rem 0.75rem;
  }

  //Button Color Options
  &.button--primary   { @include button(var(--btn-primary-bg), var(--btn-primary-hover), var(--btn-primary-text)); }
  // &.button--secondary { @include button(var(--color-accent), var(--color-accent-dark), var(--color-white)); }
  &.button--blue      { @include button(var(--color-blue), var(--color-blue-dark), var(--color-white)); }
  &.button--green     { @include button(var(--color-green), var(--color-green-dark), var(--color-white)); }
  &.button--orange    { @include button(var(--color-orange), var(--color-orange-dark), var(--color-black)); }
  &.button--purple    { @include button(var(--color-purple), var(--color-purple-dark), var(--color-white)); }
  &.button--red       { @include button(var(--color-red), var(--color-red-dark), var(--color-white)); }
  &.button--white     { @include button(var(--color-white), var(--color-hover), var(--color-black)); }
  &.button--black     { @include button(var(--color-black), var(--color-black), var(--color-white)); }
  &.button--gray,
  &.button--grey      { @include button(var(--btn-gray-bg), var(--btn-gray-hover), var(--btn-gray-text)); }

  //Used to display actions and icons with a transparent background
  //transparentize(white, 1) used instead of transparent because "darken" requires an rgb color value
  &.button--transparent {
    @include transparent--button(var(--btn-primary-bg));
    &:not(.button--icon) { //Retains button--icon padding
      padding-left: 0.5rem;
      padding-right: 0.5rem;
    }
    &.button--primary { @include transparent--button(var(--btn-primary-bg)); }
    // &.button--secondary { @include transparent--button(var(--color-gray-4)); }
    &.button--blue { @include transparent--button(var(--color-blue)); }
    &.button--gray,
    &.button--grey { @include transparent--button(var(--btn-gray-text)); }
    &.button--green { @include transparent--button(var(--color-green)); }
    &.button--red { @include transparent--button(var(--color-red)); }
    &.button--orange { @include transparent--button(var(--color-orange)); }
    &.button--purple { @include transparent--button(var(--color-purple)); }
    &.button--white {
      @include transparent--button(var(--color-white));
      &:hover, &:focus { background-color: rgba(0, 0, 0, 0.4) !important; } //custom hover override to better display on dark header color
      &:active { background-color: rgba(0, 0, 0, 0.6) !important; } //custom hover override to better display on dark header color
    }
  }

  &.button--border {
    @include border--button(var(--btn-primary-bg), var(--btn-primary-hover));
    border: 2px solid;
    @media #{$tablet} {
      padding-top: calc(0.45rem - 2px);
      padding-bottom: calc(0.5rem - 2px);
      padding-left: calc(1rem - 2px);
      padding-right: calc(1rem - 2px);
    }
    &.button--primary { @include border--button(var(--btn-primary-bg), var(--btn-primary-hover)); }
    &.button--blue { @include border--button(var(--color-blue), var(--color-blue-dark)); }
    &.button--green { @include border--button(var(--color-green), var(--color-green-dark)); }
    &.button--red { @include border--button(var(--color-red), var(--color-red-dark)); }
    &.button--orange { @include border--button(var(--color-orange), var(--color-orange-dark)); }
    &.button--purple { @include border--button(var(--color-purple), var(--color-purple-dark)); }
    &.button--gray {
      @include border--button(var(--btn-gray-hover), var(--btn-gray-hover));
      color: var(--btn-gray-text);
      &:hover, &:focus {
        color: var(--color-black) !important;
        .dashing-icon:before {
          color: var(--color-black) !important;
          transition: all 50ms ease-in-out;
        }
      }
    }
    &.button--white {
      @include border--button(var(--color-white), var(--color-hover));
      &:hover, &:focus {
        color: var(--color-black) !important;
        .dashing-icon:before {
          color: var(--color-black) !important;
          transition: all 50ms ease-in-out;
        }
      }
    }
  }

  &.button--round { @extend %button--round; }
  &.button--smooth { @extend %button--smooth; }
  &.button--square { @extend %button--square; }

  //Fixes Firefox alignment
  .dashing-icon.flow-opposite { display: inline-block; }

  //Experimental Ripple Effect
  &.ripple {
    position: relative;
    overflow: hidden;
    transform: translate3d(0, 0, 0);

    &:after {
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      pointer-events: none;
      background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
      background-repeat: no-repeat;
      background-position: 50%;
      transform: scale(10, 10);
      opacity: 0;
      transition: transform .5s, opacity 1s;
    }

    &:active:after {
      transform: scale(0, 0);
      opacity: .3;
      transition: 0s;
    }
  }
}

//Used for creating clickable dashing icons
.button--icon {
  border-radius: 50px !important;
  padding: 0.6rem;

  &.button--icon--main {
    @extend %shadow-100;
    padding: $space-m;
    &:active { @extend %shadow-50; }
  }

  &.button--transparent { //makes default transparent button icon gray, rather than blue
    @include transparent--button($color: $gray-700);
  }
}

//Provides margin when a button and action are paired together
.button ~ .action {
  margin-left: 0.5rem;
}
