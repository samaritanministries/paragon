/* Card Styles
  =========================================================================== */

//TODO remove .card--header, .card--content, .card--footer with major release

.card,
%card {
	@extend %card-shadow;
	background-color: $color-white;
	border-radius: 5px;
	margin: 1.5rem auto;

	.card--header,
	&.card--content,
	&.card--footer,
	.card-header,
	&.card-content,
	&.card-footer {
		hr { margin: ($grid-gutter) 0; }
	}

	//Spans the hr full width within a card. card--header, card--content, card--footer will use padding for spacing.
	hr { margin: 0; }

	.card--header,
	.card-header {
		padding: $grid-gutter $grid-gutter 0 $grid-gutter;
		padding-bottom: 0;

		&.has-border {
			border-bottom: 2px solid $color-border;
			padding-bottom: $grid-gutter;

			+.card--content .card-banner,
			+.card-content .card-banner {
				margin-top: -$grid-gutter;
			}
		}

		&.has-icon {
			align-items: baseline;
			display: flex;
			i { margin-right: $space-xs; }
		}

		h1,
		h2,
		h3,
		h4 { margin-bottom: 0; } //removes default margin-bottom in card-headers
	}


	.card--content,
	.card-content {
		overflow: auto;
		padding: $grid-gutter;
	}

	.card--footer,
	.card-footer {
		padding: 0 $grid-gutter $grid-gutter $grid-gutter;

		&.has-border {
			border-top: 2px solid $color-border;
			padding-top: $grid-gutter;
		}
	}

	.card--header + &.card--footer,
	.card-header + &.card-footer {
		padding-top: $grid-gutter;
	}

	//Use "is-selectable" to indicate a clickable card, add disabled or is-disabled to fade back the card
	&.is-selectable {
		transition: box-shadow 0.2s ease-in-out, background-color 0.2s ease-in-out;

		&:hover {
			@extend %card-shadow--hover;
			cursor: pointer;
		}
	}

	&.disabled,
	&.is-disabled,
	&.is-selectable.is-disabled,
	&.is-selectable.disabled {
		box-shadow: none;
		opacity: 0.4;
		pointer-events: none;
	}

	&.card--dashed {
		border: 2px dashed $color-border;
		box-shadow: none;
	}

	.card--narrow {
		max-width: 750px;
	}

	.card--list,
	.card-list {
		list-style: none;
		margin: 0;
		padding: 0;

		li {
			padding: $space-s $space-m;
			transition: $global-transition;
		}

		&.is-selectable {
			li {
				cursor: pointer;

				&:hover {
					background-color: $color-hover;
				}

				a {
					margin: -#{$space-s} -#{$space-m};
					padding: $space-s $space-m;
					&:hover { opacity: 1; }
				}
			}
		}

		&.has-border {
			li {
				border-bottom: 1px solid $color-border;
				&:last-of-type { border: 0; }
			}
		}
	}
	//Table within Card
	.card-table {
		border-radius: 0 0 5px 5px;
		overflow-x: auto;

		.table,
		table {
			border-radius: 0 0 5px 5px;
			margin-top: $grid-gutter !important;

			th {
				background-color: $color-background;
				border-top: 2px solid $color-border;
				padding: $space-xs $space-m !important;
			}

			&.has-arrow {
				th,
				tr {
					td:last-of-type {
						width: 3rem;
					}
				}
			}

			&.is-selectable {
				tbody tr {
					transition: $global-transition;

					&:hover {
						background-color: $color-hover;
						cursor: pointer;
					}
				}
			}
		}
	}
}

.card-info {
	@extend %card;
	background-color: lighten($color-blue, 55%);
	border-left: 6px solid $color-blue;
	min-width: 100%;
	overflow: hidden;

	.dashing-icon::before { color: $color-blue; }

	.card-info--title {
		color: $color-blue;
		margin: 0;
	}

	.card-header { padding-top: $space-s; }
	.card-content { padding: $space-s $space-m; }

	.card-header,
	.card-content {
		&.has-icon {
			align-items: baseline;
			display: flex;
			.dashing-icon { margin-right: $space-xs; }
		}

		&.has-button {
			align-items: center;
			display: flex;
			button { white-space: nowrap; }
		}
	}

	&.has-warning {
		background-color: lighten($color-orange, 40%);
		border-left-color: $color-orange;
		.card-info--title { color: $color-orange; }
		.dashing-icon::before { color: $color-orange; }
	}

	&.has-error {
		background-color: lighten($color-red, 45%);
		border-left-color: $color-red;
		.card-info--title { color: $color-red; }
		.dashing-icon::before { color: $color-red; }
	}

	&.has-success {
		background-color: lighten($color-green, 70%);
		border-left-color: $color-green;
		.card-info--title { color: $color-green; }
		.dashing-icon::before { color: $color-green; }
	}
}

//Set the margin of Cards when they are within a Grid
.grid {
	:not(.checkbox-card):not(.radio-card):not(.card-content) > .card:not(.card--dashed) {
		@media #{$phone} {
			border-radius: 0;
			margin: 0 -#{$grid-gutter} $grid-gutter -#{$grid-gutter};
		}
		@media #{$tablet} {
			margin: 0 0 $grid-gutter 0;
			&:last-of-type { margin-bottom: 0; }
		}
	}
}

/* Card Loading Animation
  =========================================================================== */
.card.is-loading {
	overflow: hidden;

	.card-header,
	.card--header,
	.card-content,
	.card--content,
	.card-footer,
	.card--footer {
		overflow: hidden;

		* { //Targets all elements inside the card header, content, and footer
			background-color: $color-background;
			border-radius: 3px;
			height: 1.25rem;
			overflow: hidden;
			position: relative;

			&::after {
				animation: loadingCard 1.2s infinite;
				background: linear-gradient(90deg, transparent, rgba($color-black, 0.07), transparent);
				content: '';
				display: block;
				height: 100%;
				position: absolute;
				top: 0;
				transform: translateX(-100%);
				width: 100%;
			}
		}
	}

	.card-header,
	.card--header {
		* {
			width: 200px; //Sets a static width for the header
		}
	}

	.card-footer,
	.card--footer {
		* {
			margin: 0;
			width: 100px; //Sets a static width for footer buttons
		}
	}
}

@keyframes loadingCard {
	100% {
		transform: translateX(100%);
	}
}
