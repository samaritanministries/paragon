{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js","webpack:///./src/components/subnavigation.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./src/pages/components/icons/code.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./src/components/codetoggle.js"],"names":["self","Prism","global","a","e","t","plugins","customClass","add","n","map","s","prefix","hooks","content","type","language","Array","isArray","classes","push","apply","SubNav","getPageName","pageName","sectionName","hasReact","getSectionName","replace","className","partiallyActive","activeClassName","to","defaultProps","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","currentPageNameLower","toLowerCase","Icons","props","state","showCodeContainer","activeId","iconText","copyCodeText","copyCodeClass","handleClick","bind","copyToClipboard","element","$temp","$","append","val","text","select","document","execCommand","remove","this","setState","setTimeout","name","id","render","location","pathname","iconsData","icon","Fragment","key","onClick","iconName","style","display","marginRight","React","Component","i","util","clone","javascript","jsx","tag","spread","punctuation","script","o","join","p","length","tagName","pop","openedBraces","g","splice","Token","tokens","CodeToggle","showCode","toggleCode","componentDidMount","highlightAll","prevState","children"],"mappings":"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","file":"component---src-pages-components-icons-code-js-d5e89a089dcbf2dd7036.js","sourcesContent":["!function () {\n  if (\"undefined\" != typeof self && self.Prism || \"undefined\" != typeof global && global.Prism) {\n    var a,\n        e,\n        t = \"\";\n    Prism.plugins.customClass = {\n      add: function add(n) {\n        a = n;\n      },\n      map: function map(s) {\n        e = \"function\" == typeof s ? s : function (n) {\n          return s[n] || n;\n        };\n      },\n      prefix: function prefix(n) {\n        t = n || \"\";\n      }\n    }, Prism.hooks.add(\"wrap\", function (s) {\n      if (a) {\n        var n = a({\n          content: s.content,\n          type: s.type,\n          language: s.language\n        });\n        Array.isArray(n) ? s.classes.push.apply(s.classes, n) : n && s.classes.push(n);\n      }\n\n      (e || t) && (s.classes = s.classes.map(function (n) {\n        return t + (e ? e(n, s.language) : n);\n      }));\n    });\n  }\n}();","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n","Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)?url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  \"module-modifier\": {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: \"keyword\"\n  },\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","import React from 'react'\nimport { Link } from 'gatsby'\nimport $ from 'jquery';\nimport PropTypes from 'prop-types'\n\nimport { iconsData } from \"./iconData\";\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Icons\";\nconst currentPageNameLower = currentPageName.toLowerCase();\nconst millisecondWaitTime = 2000;\n\nclass Icons extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCodeContainer: true,\n      activeId: null,\n      iconText: \"\",\n      copyCodeText: \"Copy Code\",\n      copyCodeClass: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n  }\n\n  copyToClipboard(element) {\n    var $temp = $(\"<input>\");\n    $(\"body\").append($temp);\n    $temp.val($(element).text()).select();\n    document.execCommand(\"copy\");\n    $temp.remove();\n    this.setState({\n      copyCodeText: \"Copied\",\n      copyCodeClass: \"copied\"\n    });\n    setTimeout(() => {\n      this.setState({\n        copyCodeText: \"Copy Code\",\n        copyCodeClass: null\n      });\n    }, millisecondWaitTime);\n  }\n\n  handleClick(name, id) {\n    this.setState({\n      iconText: name\n    })\n    if (id === this.state.activeId) {\n    this.setState({\n      activeId: null\n    });\n    } else {\n      this.setState({\n        activeId: id\n      });\n    }\n }\n\n\n  render() {\n    const { location } = this.props;\n\n    return (\n\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n\n            <h2 id=\"styles\">Icons\n              <Link to={location.pathname + \"/#icons\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"grid example-container\">\n              { iconsData.map((icon) => (\n                <React.Fragment key={icon.id}>\n                  <div\n                    className={`grid--fourth grid--sixth_desktop grid--fourth_mobile example--icon-container ${icon.id === this.state.activeId ?\n                \"active\" : \"\" }`}\n                    onClick={() => this.handleClick(icon.iconName, icon.id) && this.handleClick.bind(this)}\n                  >\n                    <i className={`dashing-icon dashing-icon--${icon.iconName}`}></i>\n                    <span className=\"example--caption\">{icon.iconName}</span>\n                  </div>\n                </React.Fragment>\n              ))}\n            </div>\n\n            <div className={`icon-code--container ${this.state.activeId === null ? \"\" : \"slideIn\" }`}>\n              <div className=\"icon-code\">\n                <h3 className=\"text-color--white no-margin\">{this.state.iconText}</h3>\n                <div className=\"hover-code\" onClick={() => this.copyToClipboard('code.text-to-copy')}>\n                  <code className=\"text-to-copy language-html show\" style={{ display: \"inline-block\" }}>\n                    {`<i class=\"dashing-icon dashing-icon--${this.state.iconText}\"></i>`}\n                  </code>\n                  <button type=\"button\" className={`button--secondary button--copy-code ${this.state.copyCodeClass}`}>{this.state.copyCodeText}</button>\n                </div>\n              </div>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"styles\">Icon Colors\n              <Link to={location.pathname + \"/#icon-colors\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <p className=\"no-margin\">To change the color of an icon, add the class <code className=\"example-text\">.dashing-icon--[color]</code></p>\n                  <Link to=\"/style/color/code\">View available colors</Link>\n                  <hr className=\"mb-space-m mt-space-m\"/>\n                  <i className=\"dashing-icon dashing-icon--alert-filled dashing-icon--red\" />\n                  <div className=\"show-code mt-space-xs mb-space-m\">\n                    <CodeToggle>\n                      {`<i class=\"dashing-icon dashing-icon--alert-filled dashing-icon--red\"></i>`}\n                    </CodeToggle>\n                  </div>\n                  <i className=\"dashing-icon dashing-icon--checkmark-filled dashing-icon--green\" />\n                  <div className=\"show-code mt-space-xs\">\n                    <CodeToggle>\n                      {`<i class=\"dashing-icon dashing-icon--checkmark-filled dashing-icon--green\"></i>`}\n                    </CodeToggle>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"styles\">Icon Sizing\n              <Link to={location.pathname + \"/#icon-sizing\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3>Custom sizing</h3>\n                </div>\n                <div className=\"card-content\">\n                  <p>To change the size of an icon, add the class <code className=\"example-text\">.dashing-icon--[size]</code>.</p>\n                  <i className=\"dashing-icon dashing-icon--info-filled dashing-icon--xs\" style={{ marginRight: \"0.25rem\" }} />\n                  <i className=\"dashing-icon dashing-icon--info-filled dashing-icon--s\" style={{ marginRight: \"0.25rem\" }} />\n                  <i className=\"dashing-icon dashing-icon--info-filled dashing-icon--m\" style={{ marginRight: \"0.25rem\" }} />\n                  <i className=\"dashing-icon dashing-icon--info-filled dashing-icon--l\" style={{ marginRight: \"0.25rem\" }} />\n                  <i className=\"dashing-icon dashing-icon--info-filled dashing-icon--xl\" />\n                  <div className=\"show-code mt-space-xs mb-space-m\">\n                    <CodeToggle>\n{`<i class=\"dashing-icon dashing-icon--info-filled dashing-icon--xs\"></i>\n<i class=\"dashing-icon dashing-icon--info-filled dashing-icon--s\"></i>\n<i class=\"dashing-icon dashing-icon--info-filled dashing-icon--m\"></i>\n<i class=\"dashing-icon dashing-icon--info-filled dashing-icon--l\"></i>\n<i class=\"dashing-icon dashing-icon--info-filled dashing-icon--xl\"></i>\n`}\n                    </CodeToggle>\n                  </div>\n                  <div className=\"flex-table is-condensed font-small\">\n                    <ol className=\"table-row--header\">\n                      <li>Class</li>\n                      <li>Size</li>\n                    </ol>\n                    <ol className=\"table-row\">\n                      <li><code className=\"example-text\">dashing-icon--xs</code></li>\n                      <li>0.8rem</li>\n                    </ol>\n                    <ol className=\"table-row\">\n                      <li><code className=\"example-text\">dashing-icon--s</code></li>\n                      <li>0.9rem</li>\n                    </ol>\n                    <ol className=\"table-row\">\n                      <li><code className=\"example-text\">dashing-icon--m</code></li>\n                      <li>1.25rem</li>\n                    </ol>\n                    <ol className=\"table-row\">\n                      <li><code className=\"example-text\">dashing-icon--l</code></li>\n                      <li>1.563rem</li>\n                    </ol>\n                    <ol className=\"table-row\">\n                      <li><code className=\"example-text\">dashing-icon--xl</code></li>\n                      <li>1.953rem</li>\n                    </ol>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3>Relative sizing</h3>\n                </div>\n                <div className=\"card-content\">\n                  <p>Nesting an icon inside of an element will make it take on the size of the parent container.</p>\n                  <h2 className=\"text-color--green\">\n                    <i className=\"dashing-icon dashing-icon--checkmark-filled dashing-icon--green\" />\n                    {\" \"}Success\n                  </h2>\n                  <div className=\"show-code mt-space-xs\">\n                    <CodeToggle>\n{`<h2 class=\"text-color--green\">\n  <i class=\"dashing-icon dashing-icon--checkmark-filled dashing-icon--green\"></i>\n  Success\n</h2>`}\n                    </CodeToggle>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"styles\">Icons with Text\n              <Link to={location.pathname + \"/#icons-with-text\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-header has-icon\">\n                  <h3><i className=\"dashing-icon dashing-icon--info-filled\" />Card Header with Icon</h3>\n                </div>\n                <div className=\"card-content\">\n                  <p className=\"no-margin\">This is an example of placing an icon in a card header</p>\n                </div>\n              </div>\n\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3>Card Content with Icon</h3>\n                </div>\n                <div className=\"card-content\">\n                  <div className=\"flex flex-baseline has-icon\">\n                    <i className=\"dashing-icon dashing-icon--info-filled\" />\n                    <p className=\"no-margin\">This is an example of placing an icon in card content that could be multiple lines.</p>\n                  </div>\n                </div>\n              </div>\n              <CodeToggle>\n{`<!-- Use flex to align the icon. Us has-icon to give the icon proper spacing -->\n<div class=\"card\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--info-filled\" />\n    <h3>Card Header with Icons</h3>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is an example of placing an icon in a card header</p>\n  </div>\n</div>\n\n<!-- For multi-line content use flex-baseline to align the icon -->\n<div class=\"card\">\n  <div class=\"card-header\">\n    <h3>Card Content with Icon</h3>\n  </div>\n  <div class=\"card-content\">\n    <div class=\"flex flex-baseline has-icon\">\n      <i class=\"dashing-icon dashing-icon--info-filled\" />\n      <p class=\"no-margin\">This is an example of placing an icon in card content that could be multiple lines.</p>\n    </div>\n  </div>\n</div>\n`}\n              </CodeToggle>\n            </div>\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\nexport default Icons;\n","!function (i) {\n  var t = i.util.clone(i.languages.javascript);\n  i.languages.jsx = i.languages.extend(\"markup\", t), i.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i, i.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, i.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i, i.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, i.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, i.languages.jsx.tag), i.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: i.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, i.languages.jsx.tag);\n\n  var o = function o(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(o).join(\"\") : \"\";\n  },\n      p = function p(t) {\n    for (var n = [], e = 0; e < t.length; e++) {\n      var a = t[e],\n          s = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < n.length && n[n.length - 1].tagName === o(a.content[0].content[1]) && n.pop() : \"/>\" === a.content[a.content.length - 1].content || n.push({\n        tagName: o(a.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n.length && \"punctuation\" === a.type && \"{\" === a.content ? n[n.length - 1].openedBraces++ : 0 < n.length && 0 < n[n.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? n[n.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof a) && 0 < n.length && 0 === n[n.length - 1].openedBraces) {\n        var g = o(a);\n        e < t.length - 1 && (\"string\" == typeof t[e + 1] || \"plain-text\" === t[e + 1].type) && (g += o(t[e + 1]), t.splice(e + 1, 1)), 0 < e && (\"string\" == typeof t[e - 1] || \"plain-text\" === t[e - 1].type) && (g = o(t[e - 1]) + g, t.splice(e - 1, 1), e--), t[e] = new i.Token(\"plain-text\", g, null, g);\n      }\n\n      a.content && \"string\" != typeof a.content && p(a.content);\n    }\n  };\n\n  i.hooks.add(\"after-tokenize\", function (t) {\n    \"jsx\" !== t.language && \"tsx\" !== t.language || p(t.tokens);\n  });\n}(Prism);","import React from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/plugins/custom-class/prism-custom-class.min.js\";\nimport \"prismjs/components/prism-jsx.min.js\";\nimport \"prismjs/components/prism-scss.min.js\";\nimport PropTypes from \"prop-types\";\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggleCode() {\n    this.setState((prevState) => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  render() {\n    const { children, language } = this.props;\n    const { showCode } = this.state;\n    Prism.plugins.customClass.map({ tag: \"exampletag\" });\n\n    return (\n      <div className={showCode ? \"group-open\" : \"\"}>\n        <div onClick={this.toggleCode} className={showCode ? \"code-toggle is-open\" : \"code-toggle\"}>\n          <i className=\"icon--code\" />\n        </div>\n        <pre className={showCode ? `language-${language} show` : `language-${language}`}>\n          <code className={showCode ? `language-${language} show` : `language-${language}`}>{children}</code>\n        </pre>\n      </div>\n    );\n  }\n\n}\n\nCodeToggle.propTypes = {\n  children: PropTypes.string,\n  language: PropTypes.string\n};\n\nCodeToggle.defaultProps = {\n  children: \"Default\",\n  language: \"html\"\n};\n\nexport default CodeToggle;\n"],"sourceRoot":""}