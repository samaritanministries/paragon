{"version":3,"sources":["webpack:///./src/pages/components/cards/code.js","webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js","webpack:///./src/components/subnavigation.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./src/components/codetoggle.js"],"names":["currentPageNameLower","toLowerCase","CardsCode","props","state","isLoading","toggleLoading","bind","this","setState","prevState","render","location","className","pageName","id","to","pathname","htmlFor","type","onClick","React","Component","self","Prism","global","a","e","t","plugins","customClass","add","n","map","s","prefix","hooks","content","language","Array","isArray","classes","push","apply","SubNav","getPageName","sectionName","hasReact","getSectionName","replace","partiallyActive","activeClassName","defaultProps","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","i","util","clone","javascript","jsx","tag","spread","punctuation","script","o","join","p","length","tagName","pop","openedBraces","g","splice","Token","tokens","CodeToggle","showCode","toggleCode","componentDidMount","highlightAll","children"],"mappings":"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","file":"component---src-pages-components-cards-code-js-90682d5effd14d8b929e.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Cards\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nexport default class CardsCode extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: true };\n    this.toggleLoading = this.toggleLoading.bind(this);\n  }\n\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  toggleLoading() {\n    this.setState(prevState => ({\n      isLoading: !prevState.isLoading\n    }));\n   }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n      <AppContent>\n    \t\t<div className=\"grid grid-padding\">\n\n          <h2 id=\"form\">Form\n            <Link to={location.pathname + \"/#form\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n          <div className=\"example-container\">\n            <div className=\"card\">\n              <div className=\"card-header has-border\">\n                <h2 className=\"no-margin\">Card Header</h2>\n              </div>\n\n              <div className=\"card-content flex-content\">\n                <div className=\"flex-row\">\n                  <fieldset>\n                    <label htmlFor=\"first-name\">First Name</label>\n                    <input type=\"text\" id=\"first-name\"/>\n                  </fieldset>\n                  <fieldset>\n                    <label htmlFor=\"middle-name\">Middle Name</label>\n                    <input type=\"text\" id=\"middle-name\"/>\n                  </fieldset>\n                  <fieldset>\n                    <label htmlFor=\"last-name\">Last Name</label>\n                    <input type=\"text\" id=\"last-name\"/>\n                  </fieldset>\n                </div>\n                <div className=\"flex-row\">\n                  <fieldset>\n                    <label htmlFor=\"birthday\">Date of Birth</label>\n                    <input type=\"date\" id=\"birthday\"/>\n                  </fieldset>\n                  <fieldset className=\"select--has-icon\">\n                    <label htmlFor=\"gender\">Gender</label>\n                    <select id=\"gender\">\n                      <option>Male</option>\n                      <option>Female</option>\n                    </select>\n                  </fieldset>\n                  <fieldset className=\"spacer\"></fieldset>\n                </div>\n              </div>\n              <div className=\"card-footer\">\n                <button className=\"mr-space-xs\">Submit</button>\n                <button className=\"button--transparent button--gray\">Cancel</button>\n              </div>\n            </div>\n            <CodeToggle>\n{`<!-- Form within a card -->\n<div class=\"card\">\n<div class=\"card-header has-border\">\n  <h2 class=\"no-margin\">Card Header</h2>\n</div>\n\n<div class=\"card-content flex-content\">\n  <div class=\"flex-row\">\n    <fieldset>\n      <label for=\"first-name\">First Name</label>\n      <input type=\"text\" id=\"first-name\"/>\n    </fieldset>\n    <fieldset>\n      <label for=\"middle-name\">Middle Name</label>\n      <input type=\"text\" id=\"middle-name\"/>\n    </fieldset>\n    <fieldset>\n      <label for=\"last-name\">Last Name</label>\n      <input type=\"text\" id=\"last-name\"/>\n    </fieldset>\n  </div>\n  <div class=\"flex-row\">\n    <fieldset>\n      <label for=\"birthday\">Date of Birth</label>\n      <input type=\"date\" id=\"birthday\"/>\n    </fieldset>\n    <fieldset class=\"select--has-icon\">\n      <label for=\"gender\">Gender</label>\n      <select id=\"gender\">\n        <option>Male</option>\n        <option>Female</option>\n      </select>\n    </fieldset>\n    <fieldset class=\"spacer\"></fieldset>\n  </div>\n</div>\n<div class=\"card-footer\">\n  <button class=\"mr-space-xs\">Submit</button>\n  <button class=\"button--transparent button--gray\">Cancel</button>\n</div>\n</div>`}\n            </CodeToggle>\n          </div>\n\n          <h2 className=\"mt-space-xl\" id=\"states\">States\n            <Link to={location.pathname + \"/#states\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n          <div className=\"example-container\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Default</h3>\n              </div>\n              <div className=\"card-content\">\n                <p>This is a default card.</p>\n              </div>\n            </div>\n\n            <div className=\"card is-selectable\">\n              <div className=\"card-header\">\n                <h3>Selectable</h3>\n              </div>\n              <div className=\"card-content\">\n                <p>To use a selectable card, apply <code className=\"example-text\">.is-selectable</code> to the <code className=\"example-text\">.card</code>.</p>\n              </div>\n            </div>\n\n            <div className=\"card is-selectable is-disabled\">\n              <div className=\"card-header\">\n                <h3>Disabled</h3>\n              </div>\n              <div className=\"card-content\">\n                <p>To use a disabled card, apply <code className=\"example-text\">.is-disabled</code> to the <code className=\"example-text\">.card</code>.</p>\n              </div>\n            </div>\n\n            <div className=\"card card--dashed mb-space-m\">\n              <div className=\"card-header\">\n                <h3>Dashed</h3>\n              </div>\n              <div className=\"card-content\">\n                <p>To use a dashed card, apply <code className=\"example-text\">.card--dashed</code> to the <code className=\"example-text\">.card</code>.</p>\n              </div>\n            </div>\n\n            {/* <LoadingCard hasBorder={true} numberOfLines={1} hasFooter={false}/> */}\n\n            <div className={this.state.isLoading ? 'card' : 'card is-loading'}>\n              <div className=\"card-header\">\n                <h3 className={this.state.isLoading ? 'hidden' : ''}>&nbsp;</h3>\n                <h3 className={this.state.isLoading ? '' : 'hidden'}>Loading</h3>\n              </div>\n              <div className=\"card-content\">\n                <p className={this.state.isLoading ? 'hidden' : ''}>&nbsp;</p>\n                <p className={this.state.isLoading ? '' : 'hidden'}>To use the loading card, apply <code className=\"example-text\">.is-loading</code> to the <code className=\"example-text\">.card</code>. Then add empty elements within the card.</p>\n              </div>\n            </div>\n            <button className=\"button mb-space-m\" onClick={this.toggleLoading}>Toggle Loading</button>\n            <CodeToggle>\n{`<!-- Different states of cards -->\n<div class=\"card\">\n  <div class=\"card-header\">\n    <h3>Default</h3>\n  </div>\n  <div class=\"card-content\">\n    <p>This is a default card.</p>\n  </div>\n</div>\n\n<div class=\"card is-selectable\">\n  <div class=\"card-header\">\n    <h3>Selectable</h3>\n  </div>\n  <div class=\"card-content\">\n    <p>To use a selectable card, apply <code class=\"example-text\">.is-selectable</code> to the <code class=\"example-text\">.card</code>.</p>\n  </div>\n</div>\n\n<div class=\"card is-selectable is-disabled\">\n  <div class=\"card-header\">\n    <h3>Disabled</h3>\n  </div>\n  <div class=\"card-content\">\n    <p>To use a disabled card, apply <code class=\"example-text\">.is-disabled</code> to the <code class=\"example-text\">.card</code>.</p>\n  </div>\n</div>\n\n<div class=\"card card--dashed\">\n  <div class=\"card-header\">\n    <h3>Dashed</h3>\n  </div>\n  <div class=\"card-content\">\n    <p>To use a dashed card, apply <code class=\"example-text\">.card--dashed</code> to the <code class=\"example-text\">.card</code>.</p>\n  </div>\n</div>\n\n<div class=\"card is-loading\">\n  <div class=\"card-header\">\n    <h3></h3>\n  </div>\n  <div class=\"card-content\">\n    <p></p>\n  </div>\n</div>`}\n            </CodeToggle>\n          </div>\n\n          <h2 className=\"mt-space-xl\" id=\"lists\">Lists\n            <Link to={location.pathname + \"/#lists\"} className=\"button button--transparent button--copy-link\"></Link>\n          </h2>\n          <div className=\"example-container\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Simple List</h3>\n              </div>\n              <div className=\"card-content\">\n                <ul className=\"text-list\">\n                  <li className=\"text-list_item\">List Item 1</li>\n                  <li className=\"text-list_item\">List Item 2</li>\n                  <li className=\"text-list_item\">List Item 3</li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"card\">\n              <div className=\"card-header has-border\">\n                <h2>Selectable List</h2>\n              </div>\n              <ul className=\"card-list is-selectable\">\n                <li className=\"space-between\"><span>Ryan Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n                <li className=\"space-between\"><span>Jill Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n                <li className=\"space-between\"><span>Jackson Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n                <li className=\"space-between\"><span>Emily Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n              </ul>\n            </div>\n            <CodeToggle>\n{`<!-- Different types of lists within cards -->\n<div className=\"card\">\n<div className=\"card-header\">\n  <h3>Simple List</h3>\n</div>\n<div className=\"card-content\">\n  <ul className=\"text-list\">\n    <li className=\"text-list_item\">List Item 1</li>\n    <li className=\"text-list_item\">List Item 2</li>\n    <li className=\"text-list_item\">List Item 3</li>\n  </ul>\n</div>\n</div>\n\n<div className=\"card\">\n<div className=\"card-header has-border\">\n  <h2>Selectable List</h2>\n</div>\n<ul className=\"card--list is-selectable\">\n  <li className=\"space-between\"><span>Ryan Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n  <li className=\"space-between\"><span>Jill Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n  <li className=\"space-between\"><span>Jackson Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n  <li className=\"space-between\"><span>Emily Fitz</span><i className=\"dashing-icon dashing-icon--arrow-right\"></i></li>\n</ul>\n</div>`}\n            </CodeToggle>\n          </div>\n\n        <h2 className=\"mt-space-xl\" id=\"card-table\">Card Table\n          <Link to={location.pathname + \"/#card-table\"} className=\"button button--transparent button--copy-link\"></Link>\n        </h2>\n        <div className=\"example-container\">\n\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h2>Table within a Card</h2>\n            </div>\n            <div className=\"card-table\">\n              <table className=\"table has-dividers is-selectable has-arrow\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Age</th>\n                    <th>Start Date</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      Ryan Fitz\n                    </td>\n                    <td>\n                      Primary\n                    </td>\n                    <td>\n                      47\n                    </td>\n                    <td>\n                      01/01/2018\n                    </td>\n                    <td className=\"align-right\">\n                      <i className=\"dashing-icon dashing-icon--arrow-right\"></i>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      Lisa Fitz\n                    </td>\n                    <td>\n                      Spouse\n                    </td>\n                    <td>\n                      42\n                    </td>\n                    <td>\n                      01/01/2018\n                    </td>\n                    <td className=\"align-right\">\n                      <i className=\"dashing-icon dashing-icon--arrow-right\"></i>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <CodeToggle>\n{`<div class=\"card\">\n  <div class=\"card-header\">\n    <h2>Table within a Card</h2>\n  </div>\n  <div class=\"card-table\">\n    <table class=\"table has-dividers is-selectable has-arrow\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Type</th>\n          <th>Age</th>\n          <th>Start Date</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Ryan Fitz</td>\n          <td>Primary</td>\n          <td>47</td>\n          <td>01/01/2018</td>\n          <td class=\"align-right\">\n            <i class=\"dashing-icon dashing-icon--arrow-right\"></i>\n          </td>\n        </tr>\n        <tr>\n          <td>Lisa Fitz</td>\n          <td>Spouse</td>\n          <td>42</td>\n          <td>01/01/2018</td>\n          <td class=\"align-right\">\n            <i class=\"dashing-icon dashing-icon--arrow-right\"></i>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>`}\n          </CodeToggle>\n        </div>\n\n        <h2 className=\"mt-space-xl\" id=\"card-info\">Card Info\n          <Link to={location.pathname + \"/#card-info\"} className=\"button button--transparent button--copy-link\"></Link>\n        </h2>\n\n        <div className=\"example-container\">\n\n          <div className=\"card\">\n            <div className=\"card-header has-border\">\n              <h3>Information Cards</h3>\n            </div>\n            <div className=\"card-content\">\n\n              <p className=\"mb-space-m\">Information cards are nested inside another card and are a good way to spotlight instructions or to give text more emphasis.</p>\n\n              <div className=\"card-info\">\n                <div className=\"card-header has-icon\">\n                  <i className=\"dashing-icon dashing-icon--info-filled\" />\n                  <h4 className=\"card-info--title\">Please Note</h4>\n                </div>\n                <div className=\"card-content\">\n                  <p className=\"no-margin\">This is an info card.</p>\n                </div>\n              </div>\n\n              <div className=\"card-info has-success\">\n                <div className=\"card-header has-icon\">\n                  <i className=\"dashing-icon dashing-icon--checkmark-filled\" />\n                  <h4 className=\"card-info--title\">Success</h4>\n                </div>\n                <div className=\"card-content\">\n                  <p className=\"no-margin\">This is a success card.</p>\n                </div>\n              </div>\n\n              <div className=\"card-info has-warning\">\n                <div className=\"card-header has-icon\">\n                  <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                  <h4 className=\"card-info--title\">Warning</h4>\n                </div>\n                <div className=\"card-content\">\n                  <p className=\"no-margin\">This is a warning card.</p>\n                </div>\n              </div>\n\n              <div className=\"card-info has-error\">\n                <div className=\"card-header has-icon\">\n                  <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                  <h4 className=\"card-info--title\">Error</h4>\n                </div>\n                <div className=\"card-content\">\n                  <p className=\"no-margin\">This is a error card.</p>\n                </div>\n              </div>\n\n              <div className=\"card-info has-error\">\n                <div className=\"card-content has-icon\">\n                  <i className=\"dashing-icon dashing-icon--alert-filled\" />\n                  <p className=\"no-margin\">This is a error card without a title.</p>\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n\n          <CodeToggle>\n{`<div class=\"card-info has-info\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--info-filled\"></i>\n    <h4 class=\"card-info--title\">Please Note</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is an info card.</p>\n  </div>\n</div>\n\n<div class=\"card-info has-success\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--checkmark-filled\"></i>\n    <h4 class=\"card-info--title\">Success</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is a success card.</p>\n  </div>\n</div>\n\n<div class=\"card-info has-warning\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--alert-filled\"></i>\n    <h4 class=\"card-info--title\">Warning</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is a warning card.</p>\n  </div>\n</div>\n\n<div class=\"card-info has-error\">\n  <div class=\"card-header has-icon\">\n    <i class=\"dashing-icon dashing-icon--alert-filled\"></i>\n    <h4 class=\"card-info--title\">Error</h4>\n  </div>\n  <div class=\"card-content\">\n    <p class=\"no-margin\">This is a error card.</p>\n  </div>\n</div>\n\n<!-- Error card without a title -->\n<div class=\"card-info has-error\">\n  <div class=\"card-content has-icon\">\n    <i class=\"dashing-icon dashing-icon--alert-filled\" />\n    <p class=\"no-margin\">This is a error card without a title.</p>\n  </div>\n</div>\n`}\n          </CodeToggle>\n\n        </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n","!function () {\n  if (\"undefined\" != typeof self && self.Prism || \"undefined\" != typeof global && global.Prism) {\n    var a,\n        e,\n        t = \"\";\n    Prism.plugins.customClass = {\n      add: function add(n) {\n        a = n;\n      },\n      map: function map(s) {\n        e = \"function\" == typeof s ? s : function (n) {\n          return s[n] || n;\n        };\n      },\n      prefix: function prefix(n) {\n        t = n || \"\";\n      }\n    }, Prism.hooks.add(\"wrap\", function (s) {\n      if (a) {\n        var n = a({\n          content: s.content,\n          type: s.type,\n          language: s.language\n        });\n        Array.isArray(n) ? s.classes.push.apply(s.classes, n) : n && s.classes.push(n);\n      }\n\n      (e || t) && (s.classes = s.classes.map(function (n) {\n        return t + (e ? e(n, s.language) : n);\n      }));\n    });\n  }\n}();","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n","Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)?url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  \"module-modifier\": {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: \"keyword\"\n  },\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","!function (i) {\n  var t = i.util.clone(i.languages.javascript);\n  i.languages.jsx = i.languages.extend(\"markup\", t), i.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i, i.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, i.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i, i.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, i.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, i.languages.jsx.tag), i.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: i.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, i.languages.jsx.tag);\n\n  var o = function o(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(o).join(\"\") : \"\";\n  },\n      p = function p(t) {\n    for (var n = [], e = 0; e < t.length; e++) {\n      var a = t[e],\n          s = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < n.length && n[n.length - 1].tagName === o(a.content[0].content[1]) && n.pop() : \"/>\" === a.content[a.content.length - 1].content || n.push({\n        tagName: o(a.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n.length && \"punctuation\" === a.type && \"{\" === a.content ? n[n.length - 1].openedBraces++ : 0 < n.length && 0 < n[n.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? n[n.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof a) && 0 < n.length && 0 === n[n.length - 1].openedBraces) {\n        var g = o(a);\n        e < t.length - 1 && (\"string\" == typeof t[e + 1] || \"plain-text\" === t[e + 1].type) && (g += o(t[e + 1]), t.splice(e + 1, 1)), 0 < e && (\"string\" == typeof t[e - 1] || \"plain-text\" === t[e - 1].type) && (g = o(t[e - 1]) + g, t.splice(e - 1, 1), e--), t[e] = new i.Token(\"plain-text\", g, null, g);\n      }\n\n      a.content && \"string\" != typeof a.content && p(a.content);\n    }\n  };\n\n  i.hooks.add(\"after-tokenize\", function (t) {\n    \"jsx\" !== t.language && \"tsx\" !== t.language || p(t.tokens);\n  });\n}(Prism);","import React from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/plugins/custom-class/prism-custom-class.min.js\";\nimport \"prismjs/components/prism-jsx.min.js\";\nimport \"prismjs/components/prism-scss.min.js\";\nimport PropTypes from \"prop-types\";\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggleCode() {\n    this.setState((prevState) => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  render() {\n    const { children, language } = this.props;\n    const { showCode } = this.state;\n    Prism.plugins.customClass.map({ tag: \"exampletag\" });\n\n    return (\n      <div className={showCode ? \"group-open\" : \"\"}>\n        <div onClick={this.toggleCode} className={showCode ? \"code-toggle is-open\" : \"code-toggle\"}>\n          <i className=\"icon--code\" />\n        </div>\n        <pre className={showCode ? `language-${language} show` : `language-${language}`}>\n          <code className={showCode ? `language-${language} show` : `language-${language}`}>{children}</code>\n        </pre>\n      </div>\n    );\n  }\n\n}\n\nCodeToggle.propTypes = {\n  children: PropTypes.string,\n  language: PropTypes.string\n};\n\nCodeToggle.defaultProps = {\n  children: \"Default\",\n  language: \"html\"\n};\n\nexport default CodeToggle;\n"],"sourceRoot":""}