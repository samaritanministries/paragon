{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js","webpack:///./src/components/example-header.jsx","webpack:///./src/components/subnavigation.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./src/pages/components/actions/code.js","webpack:///./src/components/codetoggle-scss.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./src/components/codetoggle.js"],"names":["self","Prism","global","a","e","t","plugins","customClass","add","n","map","s","prefix","hooks","content","type","language","Array","isArray","classes","push","apply","ExampleHeader","text","url","id","replace","toLowerCase","to","className","defaultProps","undefined","SubNav","getPageName","pageName","sectionName","hasReact","getSectionName","partiallyActive","activeClassName","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","ActionsCode","render","this","props","location","pathname","currentPageName","match","currentPageNameLower","style","textTransform","disabled","backgroundColor","name","defaultChecked","htmlFor","React","Component","CodeToggleSCSS","state","showCode","toggleCode","bind","setState","prevState","componentDidMount","highlightAll","children","i","util","clone","javascript","jsx","tag","spread","punctuation","script","o","join","p","length","tagName","pop","openedBraces","g","splice","Token","tokens","CodeToggle","onClick"],"mappings":"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","file":"component---src-pages-components-actions-code-js-38a2bf3dfdf84449a4ff.js","sourcesContent":["!function () {\n  if (\"undefined\" != typeof self && self.Prism || \"undefined\" != typeof global && global.Prism) {\n    var a,\n        e,\n        t = \"\";\n    Prism.plugins.customClass = {\n      add: function add(n) {\n        a = n;\n      },\n      map: function map(s) {\n        e = \"function\" == typeof s ? s : function (n) {\n          return s[n] || n;\n        };\n      },\n      prefix: function prefix(n) {\n        t = n || \"\";\n      }\n    }, Prism.hooks.add(\"wrap\", function (s) {\n      if (a) {\n        var n = a({\n          content: s.content,\n          type: s.type,\n          language: s.language\n        });\n        Array.isArray(n) ? s.classes.push.apply(s.classes, n) : n && s.classes.push(n);\n      }\n\n      (e || t) && (s.classes = s.classes.map(function (n) {\n        return t + (e ? e(n, s.language) : n);\n      }));\n    });\n  }\n}();","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst ExampleHeader = ({ text, url }) => (\n  <h2 id={`${text.replace(/\\s+/g, \"-\").toLowerCase()}`}>{text}\n    <Link\n      to={`${url.replace(/\\/$/, \"\")}/#${text.replace(/\\s+/g, \"-\").toLowerCase()}`}\n      className=\"button button--transparent button--copy-link\"\n    />\n  </h2>\n);\n\nExampleHeader.propTypes = {\n  text: PropTypes.string,\n  url: PropTypes.string\n};\n\nExampleHeader.defaultProps = {\n  text: undefined,\n  url: undefined\n};\n\nexport default ExampleHeader;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n","Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)?url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  \"module-modifier\": {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: \"keyword\"\n  },\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"../../../components/layout\";\nimport SubNav from \"../../../components/subnavigation\";\nimport AppContent from \"../../../components/appcontent\";\nimport CodeToggle from \"../../../components/codetoggle\";\nimport CodeToggleSCSS from \"../../../components/codetoggle-scss\";\nimport ExampleHeader from \"../../../components/example-header\";\n\nclass ActionsCode extends React.Component {\n\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  render() {\n    //TODO - how can these 4 const be a component?\n    const { location } = this.props;\n    const url = location.pathname;\n\n    // Uses regex to determine what name comes after \"/components/\"\n    const currentPageName = url.match(\"^/[^/]+/([^/]+)/\")[1];\n    const currentPageNameLower = currentPageName.toLowerCase();\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1 style={{ textTransform: \"capitalize\" }}>{currentPageName}</h1>\n          <SubNav hasReact={true} pageName={currentPageNameLower} />\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n\n            <ExampleHeader text=\"Styles\" url={url} />\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button\">Default</button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--border\">Border</button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--transparent\">Transparent</button>\n                </div>\n              </div>\n              <CodeToggle>\n                {`<button class=\"button\">Default</button>\n\n<button class=\"button button--border\">Border</button>\n\n<button class=\"button button--transparent\">Transparent</button>`}\n              </CodeToggle>\n            </div>\n\n            <ExampleHeader text=\"States\" url={url} />\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button\">Default</button>\n                  <button type=\"button\" className=\"button button--border\">Border</button>\n                  <button type=\"button\" className=\"button button--transparent\">Transparent</button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button\" disabled={true}>Disabled</button>\n                  <button type=\"button\" className=\"button button--border\" disabled={true}>Disabled</button>\n                  <button type=\"button\" className=\"button button--transparent\" disabled={true}>Disabled</button>\n                </div>\n              </div>\n              <CodeToggle>\n                {`<button class=\"button\">Default</button>\n<button class=\"button button--border\">Border</button>\n<button class=\"button button--transparent\">Transparent</button>\n\n<button class=\"button\" disabled>Disabled</button>\n<button class=\"button button--border\" disabled>Disabled</button>\n<button class=\"button button--transparent\" disabled>Disabled</button>`}\n              </CodeToggle>\n            </div>\n\n            <ExampleHeader text=\"Sizes\" url={url} />\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--small\">Small</button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button\">Default</button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--large\">Large</button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--block\">Block</button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--block_mobile\">Mobile Block</button>\n                </div>\n              </div>\n              <CodeToggle>\n                {`<button class=\"button button--small\">Small</button>\n\n<button class=\"button\">Default</button>\n\n<button class=\"button button--large\">Large</button>\n\n<button class=\"button button--block\">Block</button>\n\n<button class=\"button button--block_mobile\">Mobile Block</button>\n`}\n              </CodeToggle>\n            </div>\n\n            <ExampleHeader text=\"Colors\" url={url} />\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--blue\">Blue</button>\n                  <button type=\"button\" className=\"button button--blue button--border\">Blue</button>\n                  <button type=\"button\" className=\"button button--blue button--transparent\">Blue</button>\n                  <button type=\"button\" className=\"button button--blue button--icon\">\n                    <i className=\"dashing-icon dashing-icon--pencil\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--blue button--icon button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--pencil\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--gray\">Gray</button>\n                  <button type=\"button\" className=\"button button--gray button--border\">Gray</button>\n                  <button type=\"button\" className=\"button button--gray button--transparent\">Gray</button>\n                  <button type=\"button\" className=\"button button--gray button--icon\">\n                    <i className=\"dashing-icon dashing-icon--close\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--icon button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--close\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--green\">Green</button>\n                  <button type=\"button\" className=\"button button--green button--border\">Green</button>\n                  <button type=\"button\" className=\"button button--green button--transparent\">Green</button>\n                  <button type=\"button\" className=\"button button--green button--icon\">\n                    <i className=\"dashing-icon dashing-icon--plus\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--green button--icon button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--plus\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--orange\">Orange</button>\n                  <button type=\"button\" className=\"button button--orange button--border\">Orange</button>\n                  <button type=\"button\" className=\"button button--orange button--transparent\">Orange</button>\n                  <button type=\"button\" className=\"button button--orange button--icon\">\n                    <i className=\"dashing-icon dashing-icon--comment\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--orange button--icon button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--comment\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--purple\">Purple</button>\n                  <button type=\"button\" className=\"button button--purple button--border\">Purple</button>\n                  <button type=\"button\" className=\"button button--purple button--transparent\">Purple</button>\n                  <button type=\"button\" className=\"button button--purple button--icon\">\n                    <i className=\"dashing-icon dashing-icon--phone\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--purple button--icon button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--phone\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--red\">Red</button>\n                  <button type=\"button\" className=\"button button--red button--border\">Red</button>\n                  <button type=\"button\" className=\"button button--red button--transparent\">Red</button>\n                  <button type=\"button\" className=\"button button--red button--icon\">\n                    <i className=\"dashing-icon dashing-icon--trash\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--red button--icon button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--trash\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\" style={{ backgroundColor: \"#28336d\" }}>\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--white\">White</button>\n                  <button type=\"button\" className=\"button button--white button--border\">White</button>\n                  <button type=\"button\" className=\"button button--white button--transparent\">White</button>\n                  <button type=\"button\" className=\"button button--white button--icon\">\n                    <i className=\"dashing-icon dashing-icon--settings\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--white button--icon button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--settings\" />\n                  </button>\n                </div>\n              </div>\n              <CodeToggle>\n                {`<button class=\"button\">Blue</button>\n<button class=\"button button--border\">Blue</button>\n<button class=\"button button--transparent\">Blue</button>\n<button class=\"button button--icon\">\n  <i class=\"dashing-icon dashing-icon--pencil\"></i>\n</button>\n<button class=\"button button--blue button--icon button--transparent\">\n  <i class=\"dashing-icon dashing-icon--pencil\"></i>\n</button>\n\n<button class=\"button button--gray\">Gray</button>\n<button class=\"button button--gray button--border\">Gray</button>\n<button class=\"button button--gray button--transparent\">Gray</button>\n<button class=\"button button--gray button--icon\">\n  <i class=\"dashing-icon dashing-icon--close\"></i>\n</button>\n<button class=\"button button--icon button--transparent\">\n  <i class=\"dashing-icon dashing-icon--close\"></i>\n</button>\n\n<button class=\"button button--green\">Green</button>\n<button class=\"button button--green button--border\">Green</button>\n<button class=\"button button--green button--transparent\">Green</button>\n<button class=\"button button--green button--icon\">\n  <i class=\"dashing-icon dashing-icon--plus\"></i>\n</button>\n<button class=\"button button--green button--icon button--transparent\">\n  <i class=\"dashing-icon dashing-icon--plus\"></i>\n</button>\n\n<button class=\"button button--orange\">Orange</button>\n<button class=\"button button--orange button--border\">Orange</button>\n<button class=\"button button--orange button--transparent\">Orange</button>\n<button class=\"button button--orange button--icon\">\n  <i class=\"dashing-icon dashing-icon--comment\"></i>\n</button>\n<button class=\"button button--orange button--icon button--transparent\">\n  <i class=\"dashing-icon dashing-icon--comment\"></i>\n</button>\n\n<button class=\"button button--purple\">Purple</button>\n<button class=\"button button--purple button--border\">Purple</button>\n<button class=\"button button--purple button--transparent\">Purple</button>\n<button class=\"button button--purple button--icon\">\n  <i class=\"dashing-icon dashing-icon--phone\"></i>\n</button>\n<button class=\"button button--purple button--icon button--transparent\">\n  <i class=\"dashing-icon dashing-icon--phone\"></i>\n</button>\n\n<button class=\"button button--red\">Red</button>\n<button class=\"button button--red button--border\">Red</button>\n<button class=\"button button--red button--transparent\">Red</button>\n<button class=\"button button--red button--icon\">\n  <i class=\"dashing-icon dashing-icon--trash\"></i>\n</button>\n<button class=\"button button--red button--icon button--transparent\">\n  <i class=\"dashing-icon dashing-icon--trash\"></i>\n</button>\n\n<button class=\"button button--white\">White</button>\n<button class=\"button button--white button--border\">White</button>\n<button class=\"button button--white button--transparent\">White</button>\n<button class=\"button button--white button--icon\">\n  <i class=\"dashing-icon dashing-icon--settings\"></i>\n</button>\n<button class=\"button button--white button--icon button--transparent\">\n  <i class=\"dashing-icon dashing-icon--settings\"></i>\n</button>\n\n`}\n              </CodeToggle>\n            </div>\n\n            <ExampleHeader text=\"Icons\" url={url} />\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button\">\n                    <i className=\"dashing-icon dashing-icon--add\" />\n                  Default\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--border\">\n                    <i className=\"dashing-icon dashing-icon--pencil\" />\n                  Border\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--transparent\">\n                    <i className=\"dashing-icon dashing-icon--search\" />\n                  Transparent\n                  </button>\n                  <button type=\"button\" className=\"button button--gray button--transparent\">\n                  Transparent\n                    <i className=\"dashing-icon dashing-icon--new-tab flow-opposite\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--icon\">\n                    <i className=\"dashing-icon dashing-icon--add\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--red button--icon\">\n                    <i className=\"dashing-icon dashing-icon--trash\" />\n                  </button>\n                  <button type=\"button\" className=\"button button--transparent button--icon\">\n                    <i className=\"dashing-icon dashing-icon--question-filled\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--icon button--icon--main\">\n                    <i className=\"dashing-icon dashing-icon--add\" />\n                  </button>\n                </div>\n              </div>\n              <CodeToggle>\n                {`<button class=\"button\">\n  <i class=\"dashing-icon dashing-icon--add\"></i>\n  Default\n</button>\n\n<button class=\"button button--border\">\n  <i class=\"dashing-icon dashing-icon--pencil\"></i>\n  Border\n</button>\n\n<button class=\"button button--transparent\">\n  <i class=\"dashing-icon dashing-icon--search\"></i>\n  Transparent\n</button>\n<button class=\"button button--gray button--transparent\">\n  Transparent\n  <i class=\"dashing-icon dashing-icon--new-tab flow-opposite\"></i>\n</button>\n\n<button class=\"button button--icon\">\n  <i class=\"dashing-icon dashing-icon--add\"></i>\n</button>\n<button class=\"button button--red button--icon\">\n  <i class=\"dashing-icon dashing-icon--trash\"></i>\n</button>\n<button class=\"button button--transparent button--icon\">\n  <i class=\"dashing-icon dashing-icon--question-filled\"></i>\n</button>\n\n<button class=\"button button--icon button--icon--main\">\n  <i class=\"dashing-icon dashing-icon--add\"></i>\n</button>`}\n              </CodeToggle>\n            </div>\n\n            <ExampleHeader text=\"Button Group\" url={url} />\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <ul className=\"button-group button--blue\">\n                    <li className=\"button--radio\">\n                      <input type=\"radio\" name=\"options-blue\" id=\"blue1\" defaultChecked={true} />\n                      <label htmlFor=\"blue1\" className=\"button\">Left</label>\n                    </li>\n                    <li className=\"button--radio\">\n                      <input type=\"radio\" name=\"options-blue\" id=\"blue2\" />\n                      <label htmlFor=\"blue2\" className=\"button\">Middle</label>\n                    </li>\n                    <li className=\"button--radio\">\n                      <input type=\"radio\" name=\"options-blue\" id=\"blue3\" />\n                      <label htmlFor=\"blue3\" className=\"button\">Right</label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <ul className=\"button-group button-group--vertical button--green button--border\">\n                    <li className=\"button--radio\">\n                      <input type=\"radio\" name=\"options-gray\" id=\"toggle-gray1\" defaultChecked={true} />\n                      <label htmlFor=\"toggle-gray1\" className=\"button\">Top</label>\n                    </li>\n                    <li className=\"button--radio\">\n                      <input type=\"radio\" name=\"options-gray\" id=\"toggle-gray2\" />\n                      <label htmlFor=\"toggle-gray2\" className=\"button\">Middle</label>\n                    </li>\n                    <li className=\"button--radio\">\n                      <input type=\"radio\" name=\"options-gray\" id=\"toggle-gray3\" />\n                      <label htmlFor=\"toggle-gray3\" className=\"button\">Bottom</label>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <CodeToggle>\n                {`<ul class=\"button-group button--blue\">\n  <li class=\"button--radio\">\n    <input type=\"radio\" name=\"options-blue\" id=\"blue1\" defaultChecked />\n    <label for=\"blue1\" class=\"button\">Left</label>\n  </li>\n  <li class=\"button--radio\">\n    <input type=\"radio\" name=\"options-blue\" id=\"blue2\" />\n    <label for=\"blue2\" class=\"button\">Middle</label>\n  </li>\n  <li class=\"button--radio\">\n    <input type=\"radio\" name=\"options-blue\" id=\"blue3\" />\n    <label for=\"blue3\" class=\"button\">Right</label>\n  </li>\n</ul>\n\n<ul class=\"button-group button-group--vertical button--green button--border\">\n  <li class=\"button--radio\">\n    <input type=\"radio\" name=\"options-gray\" id=\"toggle-gray1\" defaultChecked />\n    <label for=\"toggle-gray1\" class=\"button\">Top</label>\n  </li>\n  <li class=\"button--radio\">\n    <input type=\"radio\" name=\"options-gray\" id=\"toggle-gray2\" />\n    <label for=\"toggle-gray2\" class=\"button\">Middle</label>\n  </li>\n  <li class=\"button--radio\">\n    <input type=\"radio\" name=\"options-gray\" id=\"toggle-gray3\" />\n    <label for=\"toggle-gray3\" class=\"button\">Bottom</label>\n  </li>\n</ul>`}\n              </CodeToggle>\n            </div>\n\n            <ExampleHeader text=\"Theme Options\" url={url} />\n            <div className=\"example-container\">\n              <div className=\"card\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--round\">Round</button>\n                  <button type=\"button\" className=\"button button--smooth\">Smooth</button>\n                  <button type=\"button\" className=\"button button--square\">Square</button>\n                </div>\n              </div>\n              <CodeToggle>\n                {`<button class=\"button button--round\">Round</button>\n<button class=\"button button--smooth\">Smooth</button>\n<button class=\"button button--square\">Square</button>`}\n              </CodeToggle>\n            </div>\n\n            <ExampleHeader text=\"Global Button Themes\" url={url} />\n            <p>Apply one of the following extendables to apply a button theme your entire project.</p>\n            <div className=\"example-container\">\n              <div className=\"card hide-HTML-code\">\n                <div className=\"card-content\">\n                  <button type=\"button\" className=\"button button--round\">Round</button>\n                  <button type=\"button\" className=\"button button--smooth\">Smooth</button>\n                  <button type=\"button\" className=\"button button--square\">Square</button>\n                </div>\n              </div>\n              <CodeToggle />\n              <CodeToggleSCSS>\n                {`<!-- Round Button Theme (Default) -->\nbutton { @extend %button--round; }\n\n<!-- Smooth Button Theme -->\nbutton { @extend %button--smooth; }\n\n<!-- Square Button Theme -->\nbutton { @extend %button--square; }`}\n              </CodeToggleSCSS>\n            </div>\n          </div>\n        </AppContent>\n      </Layout>\n    );\n  }\n\n}\n\nexport default ActionsCode;\n","import React from 'react'\nimport Prism from 'prismjs'\nimport 'prismjs/components/prism-scss.min.js'\n\nclass CodeToggleSCSS extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n   toggleCode() {\n    this.setState(prevState => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  render() {\n\n    return (\n      <pre className=\"language-scss\">\n        <code className=\"language-scss\">{this.props.children}</code>\n      </pre>\n    )\n  }\n}\nexport default CodeToggleSCSS;\n","!function (i) {\n  var t = i.util.clone(i.languages.javascript);\n  i.languages.jsx = i.languages.extend(\"markup\", t), i.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i, i.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, i.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i, i.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, i.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, i.languages.jsx.tag), i.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: i.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, i.languages.jsx.tag);\n\n  var o = function o(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(o).join(\"\") : \"\";\n  },\n      p = function p(t) {\n    for (var n = [], e = 0; e < t.length; e++) {\n      var a = t[e],\n          s = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < n.length && n[n.length - 1].tagName === o(a.content[0].content[1]) && n.pop() : \"/>\" === a.content[a.content.length - 1].content || n.push({\n        tagName: o(a.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n.length && \"punctuation\" === a.type && \"{\" === a.content ? n[n.length - 1].openedBraces++ : 0 < n.length && 0 < n[n.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? n[n.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof a) && 0 < n.length && 0 === n[n.length - 1].openedBraces) {\n        var g = o(a);\n        e < t.length - 1 && (\"string\" == typeof t[e + 1] || \"plain-text\" === t[e + 1].type) && (g += o(t[e + 1]), t.splice(e + 1, 1)), 0 < e && (\"string\" == typeof t[e - 1] || \"plain-text\" === t[e - 1].type) && (g = o(t[e - 1]) + g, t.splice(e - 1, 1), e--), t[e] = new i.Token(\"plain-text\", g, null, g);\n      }\n\n      a.content && \"string\" != typeof a.content && p(a.content);\n    }\n  };\n\n  i.hooks.add(\"after-tokenize\", function (t) {\n    \"jsx\" !== t.language && \"tsx\" !== t.language || p(t.tokens);\n  });\n}(Prism);","import React from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/plugins/custom-class/prism-custom-class.min.js\";\nimport \"prismjs/components/prism-jsx.min.js\";\nimport \"prismjs/components/prism-scss.min.js\";\nimport PropTypes from \"prop-types\";\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggleCode() {\n    this.setState((prevState) => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  render() {\n    const { children, language } = this.props;\n    const { showCode } = this.state;\n    Prism.plugins.customClass.map({ tag: \"exampletag\" });\n\n    return (\n      <div className={showCode ? \"group-open\" : \"\"}>\n        <div onClick={this.toggleCode} className={showCode ? \"code-toggle is-open\" : \"code-toggle\"}>\n          <i className=\"icon--code\" />\n        </div>\n        <pre className={showCode ? `language-${language} show` : `language-${language}`}>\n          <code className={showCode ? `language-${language} show` : `language-${language}`}>{children}</code>\n        </pre>\n      </div>\n    );\n  }\n\n}\n\nCodeToggle.propTypes = {\n  children: PropTypes.string,\n  language: PropTypes.string\n};\n\nCodeToggle.defaultProps = {\n  children: \"Default\",\n  language: \"html\"\n};\n\nexport default CodeToggle;\n"],"sourceRoot":""}