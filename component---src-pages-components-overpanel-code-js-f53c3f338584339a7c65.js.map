{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/custom-class/prism-custom-class.min.js","webpack:///./src/pages/components/overpanel/code.js","webpack:///./src/components/subnavigation.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./src/components/codetoggle.js"],"names":["self","Prism","global","a","e","t","plugins","customClass","add","n","map","s","prefix","hooks","content","type","language","Array","isArray","classes","push","apply","currentPageNameLower","toLowerCase","OverpanelCode","render","location","this","props","className","pageName","id","to","pathname","style","marginBottom","React","Component","SubNav","getPageName","sectionName","hasReact","getSectionName","replace","partiallyActive","activeClassName","defaultProps","languages","scss","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","i","util","clone","javascript","jsx","tag","spread","punctuation","script","o","join","p","length","tagName","pop","openedBraces","g","splice","Token","tokens","CodeToggle","state","showCode","toggleCode","bind","componentDidMount","highlightAll","setState","prevState","children","onClick"],"mappings":"gFAAA,wBACE,GAAI,oBAAsBA,MAAQA,KAAKC,YAAS,IAAsBC,GAAUA,EAAOD,MAAO,CAC5F,IAAIE,EACAC,EACAC,EAAI,GACRJ,MAAMK,QAAQC,YAAc,CAC1BC,IAAK,SAAaC,GAChBN,EAAIM,GAENC,IAAK,SAAaC,GAChBP,EAAI,mBAAqBO,EAAIA,EAAI,SAAUF,GACzC,OAAOE,EAAEF,IAAMA,IAGnBG,OAAQ,SAAgBH,GACtBJ,EAAII,GAAK,KAEVR,MAAMY,MAAML,IAAI,QAAQ,SAAUG,GACnC,GAAIR,EAAG,CACL,IAAIM,EAAIN,EAAE,CACRW,QAASH,EAAEG,QACXC,KAAMJ,EAAEI,KACRC,SAAUL,EAAEK,WAEdC,MAAMC,QAAQT,GAAKE,EAAEQ,QAAQC,KAAKC,MAAMV,EAAEQ,QAASV,GAAKA,GAAKE,EAAEQ,QAAQC,KAAKX,IAG7EL,GAAKC,KAAOM,EAAEQ,QAAUR,EAAEQ,QAAQT,KAAI,SAAUD,GAC/C,OAAOJ,GAAKD,EAAIA,EAAEK,EAAGE,EAAEK,UAAYP,WA5B3C,K,gKCUMa,EADkB,YACqBC,cAEvCC,E,kGAGJC,OAAA,WAAU,IACAC,EAAaC,KAAKC,MAAlBF,SAER,OACE,kBAAC,IAAD,KACE,4BAAQG,UAAU,UAChB,4BAZc,aAad,kBAAC,IAAD,CAAQC,SAAUR,KAEpB,kBAAC,IAAD,KACE,yBAAKO,UAAU,qBAEb,wBAAIE,GAAG,aAAP,YACE,kBAAC,OAAD,CAAMC,GAAIN,EAASO,SAAW,cAAeJ,UAAU,kDAEzD,yBAAKA,UAAU,qBAEb,kBAAC,OAAD,CAAMA,UAAU,yBAAyBG,GAAG,uCAAuCE,MAAO,CAAEC,aAAc,SAA1G,0BAEA,kBAAC,IAAD,uyBAwBF,wBAAIN,UAAU,cAAcE,GAAG,mBAA/B,mBACE,kBAAC,OAAD,CAAMC,GAAIN,EAASO,SAAW,oBAAqBJ,UAAU,kDAE/D,uBAAGA,UAAU,aAAb,8GAAoI,yCAApI,IAA2J,0BAAMA,UAAU,gBAAhB,aAA3J,KACA,wBAAIA,UAAU,aACZ,4BAAI,8DAAJ,IAAgD,0BAAMA,UAAU,gBAAhB,iBAChD,4BAAI,wDAAJ,IAA0C,0BAAMA,UAAU,gBAAhB,gBAC1C,4BAAI,yDAAJ,IAA2C,0BAAMA,UAAU,gBAAhB,gBAC3C,4BAAI,yDAAJ,IAA2C,0BAAMA,UAAU,gBAAhB,iBAE7C,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,aACf,kBAAC,IAAD,sHAQF,wBAAIA,UAAU,cAAcE,GAAG,sBAA/B,sBACE,kBAAC,OAAD,CAAMC,GAAIN,EAASO,SAAW,uBAAwBJ,UAAU,kDAElE,uBAAGA,UAAU,aAAb,iFAAuG,yCAAvG,IAA8H,0BAAMA,UAAU,gBAAhB,aAA9H,KACA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,uH,GAxEYO,IAAMC,WAuFnBb,a,kCCnGf,qCAIMc,EAAS,SAAC,GAAyC,IAEnDC,EAFYT,EAAsC,EAAtCA,SAAUU,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAGnCC,EAAiBF,EAKrB,OAHgB,OAAhBA,IAAuBE,EAAiB,cACxCH,EAAcT,EAASa,QAAQ,OAAQ,KAGrC,yBAAKd,UAAU,gBACb,kBAAC,OAAD,CAAMe,iBAAiB,EAAMC,gBAAgB,SAASb,GAAE,IAAMU,EAAN,IAAwBH,EAAxB,SAAxD,QACCE,GAAY,kBAAC,OAAD,CAAMG,iBAAiB,EAAMC,gBAAgB,SAASb,GAAE,IAAMU,EAAN,IAAwBH,EAAxB,cAAxD,SACb,kBAAC,OAAD,CAAMK,iBAAiB,EAAMC,gBAAgB,SAASb,GAAE,IAAMU,EAAN,IAAwBH,EAAxB,eAAxD,gBAWND,EAAOQ,aAAe,CACpBhB,SAAU,IACVU,YAAa,KACbC,UAAU,GAGGH,O,mBCjCfrC,MAAM8C,UAAUC,KAAO/C,MAAM8C,UAAUE,OAAO,MAAO,CACnDC,QAAS,CACPC,QAAS,uCACTC,YAAY,GAEdC,OAAQ,CACNF,QAAS,sDACTG,OAAQ,CACNC,KAAM,YAGVC,IAAK,0BACLC,SAAU,CACRN,QAAS,mGACTG,OAAQ,CACNI,OAAQ,CACNP,QAAS,IACTQ,MAAO,aAETC,YAAa,UACbC,SAAU,2BAGdC,SAAU,CACRX,QAAS,2CACTG,OAAQ,CACNO,SAAU,6BAGZ5D,MAAM8C,UAAUgB,aAAa,OAAQ,SAAU,CACjDC,QAAS,CAAC,oHAAqH,CAC7Hb,QAAS,4BACTC,YAAY,MAEZnD,MAAM8C,UAAUgB,aAAa,OAAQ,YAAa,CACpDF,SAAU,2BACR5D,MAAM8C,UAAUgB,aAAa,OAAQ,WAAY,CACnD,kBAAmB,CACjBZ,QAAS,6BACTQ,MAAO,WAETC,YAAa,CACXT,QAAS,UACTQ,MAAO,YAETM,UAAW,CACTd,QAAS,6BACTQ,MAAO,WAETO,QAAS,qBACTC,KAAM,CACJhB,QAAS,WACTQ,MAAO,WAETS,SAAU,CACRjB,QAAS,kDACTC,YAAY,KAEZnD,MAAM8C,UAAUC,KAAKK,OAAOC,OAAOe,KAAOpE,MAAM8C,UAAUC,M,oBC1D7D,SAAUsB,GACT,IAAIjE,EAAIiE,EAAEC,KAAKC,MAAMF,EAAEvB,UAAU0B,YACjCH,EAAEvB,UAAU2B,IAAMJ,EAAEvB,UAAUE,OAAO,SAAU5C,GAAIiE,EAAEvB,UAAU2B,IAAIC,IAAIxB,QAAU,2MAA4MmB,EAAEvB,UAAU2B,IAAIC,IAAIrB,OAAOqB,IAAIxB,QAAU,kBAAmBmB,EAAEvB,UAAU2B,IAAIC,IAAIrB,OAAO,cAAcH,QAAU,gEAAiEmB,EAAEvB,UAAU2B,IAAIC,IAAIrB,OAAOqB,IAAIrB,OAAO,cAAgB,4BAA6BgB,EAAEvB,UAAUgB,aAAa,SAAU,YAAa,CAC9kBa,OAAQ,CACNzB,QAAS,sDACTG,OAAQ,CACNuB,YAAa,cACb,aAAc,SAGjBP,EAAEvB,UAAU2B,IAAIC,KAAML,EAAEvB,UAAUgB,aAAa,SAAU,aAAc,CACxEe,OAAQ,CACN3B,QAAS,iDACTG,OAAQ,CACN,qBAAsB,CACpBH,QAAS,UACTQ,MAAO,eAETU,KAAMC,EAAEvB,UAAU2B,KAEpBf,MAAO,wBAERW,EAAEvB,UAAU2B,IAAIC,KAEnB,IAAII,EAAI,SAASA,EAAE1E,GACjB,OAAOA,EAAI,iBAAmBA,EAAIA,EAAI,iBAAmBA,EAAES,QAAUT,EAAES,QAAUT,EAAES,QAAQJ,IAAIqE,GAAGC,KAAK,IAAM,IAmB/GV,EAAEzD,MAAML,IAAI,kBAAkB,SAAUH,GACtC,QAAUA,EAAEW,UAAY,QAAUX,EAAEW,UAlB9B,SAASiE,EAAE5E,GACjB,IAAK,IAAII,EAAI,GAAIL,EAAI,EAAGA,EAAIC,EAAE6E,OAAQ9E,IAAK,CACzC,IAAID,EAAIE,EAAED,GACNO,GAAI,EAER,GAAI,iBAAmBR,IAAM,QAAUA,EAAEY,MAAQZ,EAAEW,QAAQ,IAAM,QAAUX,EAAEW,QAAQ,GAAGC,KAAO,OAASZ,EAAEW,QAAQ,GAAGA,QAAQ,GAAGA,QAAU,EAAIL,EAAEyE,QAAUzE,EAAEA,EAAEyE,OAAS,GAAGC,UAAYJ,EAAE5E,EAAEW,QAAQ,GAAGA,QAAQ,KAAOL,EAAE2E,MAAQ,OAASjF,EAAEW,QAAQX,EAAEW,QAAQoE,OAAS,GAAGpE,SAAWL,EAAEW,KAAK,CACvR+D,QAASJ,EAAE5E,EAAEW,QAAQ,GAAGA,QAAQ,IAChCuE,aAAc,IACX,EAAI5E,EAAEyE,QAAU,gBAAkB/E,EAAEY,MAAQ,MAAQZ,EAAEW,QAAUL,EAAEA,EAAEyE,OAAS,GAAGG,eAAiB,EAAI5E,EAAEyE,QAAU,EAAIzE,EAAEA,EAAEyE,OAAS,GAAGG,cAAgB,gBAAkBlF,EAAEY,MAAQ,MAAQZ,EAAEW,QAAUL,EAAEA,EAAEyE,OAAS,GAAGG,eAAiB1E,GAAI,IAAMA,GAAK,iBAAmBR,IAAM,EAAIM,EAAEyE,QAAU,IAAMzE,EAAEA,EAAEyE,OAAS,GAAGG,aAAc,CACrU,IAAIC,EAAIP,EAAE5E,GACVC,EAAIC,EAAE6E,OAAS,IAAM,iBAAmB7E,EAAED,EAAI,IAAM,eAAiBC,EAAED,EAAI,GAAGW,QAAUuE,GAAKP,EAAE1E,EAAED,EAAI,IAAKC,EAAEkF,OAAOnF,EAAI,EAAG,IAAK,EAAIA,IAAM,iBAAmBC,EAAED,EAAI,IAAM,eAAiBC,EAAED,EAAI,GAAGW,QAAUuE,EAAIP,EAAE1E,EAAED,EAAI,IAAMkF,EAAGjF,EAAEkF,OAAOnF,EAAI,EAAG,GAAIA,KAAMC,EAAED,GAAK,IAAIkE,EAAEkB,MAAM,aAAcF,EAAG,KAAMA,GAGvSnF,EAAEW,SAAW,iBAAmBX,EAAEW,SAAWmE,EAAE9E,EAAEW,UAKHmE,CAAE5E,EAAEoF,WA7CvD,CA+CCxF,Q,wGCxCIyF,G,0CAEJ,WAAY9D,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACK+D,MAAQ,CAAEC,UAAU,GACzB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAHD,E,4CAMnBC,kBAAA,WACE9F,IAAM+F,gB,EAGRH,WAAA,WACElE,KAAKsE,UAAS,SAACC,GAAD,MAAgB,CAC5BN,UAAWM,EAAUN,c,EAIzBnE,OAAA,WAAU,IAAD,EACwBE,KAAKC,MAA5BuE,EADD,EACCA,SAAUnF,EADX,EACWA,SACV4E,EAAajE,KAAKgE,MAAlBC,SAGR,OAFA3F,IAAMK,QAAQC,YAAYG,IAAI,CAAEiE,IAAK,eAGnC,yBAAK9C,UAAW+D,EAAW,aAAe,IACxC,yBAAKQ,QAASzE,KAAKkE,WAAYhE,UAAW+D,EAAW,sBAAwB,eAC3E,uBAAG/D,UAAU,gBAEf,yBAAKA,UAAW+D,EAAQ,YAAe5E,EAAf,oBAA6CA,GACnE,0BAAMa,UAAW+D,EAAQ,YAAe5E,EAAf,oBAA6CA,GAAamF,M,GA7BpE/D,IAAMC,YA0C/BqD,EAAW5C,aAAe,CACxBqD,SAAU,UACVnF,SAAU,QAGG0E","file":"component---src-pages-components-overpanel-code-js-f53c3f338584339a7c65.js","sourcesContent":["!function () {\n  if (\"undefined\" != typeof self && self.Prism || \"undefined\" != typeof global && global.Prism) {\n    var a,\n        e,\n        t = \"\";\n    Prism.plugins.customClass = {\n      add: function add(n) {\n        a = n;\n      },\n      map: function map(s) {\n        e = \"function\" == typeof s ? s : function (n) {\n          return s[n] || n;\n        };\n      },\n      prefix: function prefix(n) {\n        t = n || \"\";\n      }\n    }, Prism.hooks.add(\"wrap\", function (s) {\n      if (a) {\n        var n = a({\n          content: s.content,\n          type: s.type,\n          language: s.language\n        });\n        Array.isArray(n) ? s.classes.push.apply(s.classes, n) : n && s.classes.push(n);\n      }\n\n      (e || t) && (s.classes = s.classes.map(function (n) {\n        return t + (e ? e(n, s.language) : n);\n      }));\n    });\n  }\n}();","import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../../../components/layout'\nimport SubNav from '../../../components/subnavigation'\nimport AppContent from '../../../components/appcontent'\nimport CodeToggle from '../../../components/codetoggle'\n\nconst currentPageName = \"Overpanel\";\nconst currentPageNameLower = currentPageName.toLowerCase();\n\nclass OverpanelCode extends React.Component {\n  static propTypes = { location: PropTypes.object.isRequired }\n\n  render() {\n    const { location } = this.props;\n\n    return (\n      <Layout>\n        <header className=\"subnav\">\n          <h1>{currentPageName}</h1>\n          <SubNav pageName={currentPageNameLower}/>\n        </header>\n        <AppContent>\n          <div className=\"grid grid-padding\">\n\n            <h2 id=\"overpanel\">Overpanel\n              <Link to={location.pathname + \"/#overpanel\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <div className=\"example-container\">\n\n              <Link className=\"button button--primary\" to=\"../../../templates/overpanel-example\" style={{ marginBottom: \"1rem\" }}>View Example Overpanel</Link>\n\n              <CodeToggle>\n{`<div class=\"overpanel\">\n<header class=\"title-bar\">\n  <div class=\"title-content\">\n    <div>\n      <h2 class=\"title\">Overpanel Title</h2>\n      <p>Overpanel description</p>\n    </div>\n    <a href=\"/templates/default\">\n      <button class=\"button button--secondary\"><i class=\"dashing-icon dashing-icon--close\"></i> Close</button>\n    </a>\n  </div>\n</header>\n\n<section class=\"content\">\n  <div class=\"grid grid-padding\">\n    <h2>Example Fullscreen Page</h2>\n    <p>This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple! This example shows a fullscreen layout. Simple!</p>\n  </div>\n</section>\n</div>`}\n              </CodeToggle>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"overpanelWidths\">Overpanel Widths\n              <Link to={location.pathname + \"/#overpanelWidths\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p className=\"no-margin\">To change the max width of the overpanel and page content, all you need to do is apply an additional class <strong>AFTER</strong> <code className=\"example-text\">overpanel</code>.</p>\n            <ul className=\"no-margin\">\n              <li><strong>Extra Small Width (350px):</strong> <code className=\"example-text\">overpanel-xs</code></li>\n              <li><strong>Small Width (600px):</strong> <code className=\"example-text\">overpanel-s</code></li>\n              <li><strong>Medium Width (800px):</strong> <code className=\"example-text\">overpanel-m</code></li>\n              <li><strong>Large Width (1200px):</strong> <code className=\"example-text\">overpanel-l</code></li>\n            </ul>\n            <div className=\"example-container\">\n              <div className=\"show-code\">\n              <CodeToggle>\n{`<!-- By default the content width is set to overpanel-s -->\n<div class=\"overpanel overpanel-l\">\n...`}\n              </CodeToggle>\n            </div>\n            </div>\n\n            <h2 className=\"mt-space-xl\" id=\"overpanelAnimation\">Overpanel Animation\n              <Link to={location.pathname + \"/#overpanelAnimation\"} className=\"button button--transparent button--copy-link\"></Link>\n            </h2>\n            <p className=\"no-margin\">To add the sliding animation, all you need to do is apply an additional class <strong>AFTER</strong> <code className=\"example-text\">overpanel</code>.</p>\n            <div className=\"example-container\">\n              <div className=\"show-code\">\n                <CodeToggle>\n{`<!-- Overpanel slides in from the bottom of the screen  -->\n<div class=\"overpanel slide-up\">\n...`}\n                </CodeToggle>\n              </div>\n            </div>\n\n          </div>\n        </AppContent>\n      </Layout>\n    )\n  }\n}\n\nexport default OverpanelCode;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nconst SubNav = ({ pageName, sectionName, hasReact }) => {\n\n  let getPageName = pageName;\n  let getSectionName = sectionName;\n\n  sectionName === null ? getSectionName = \"components\" : sectionName;\n  getPageName = pageName.replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"subnav-links\">\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/code`}>Html</Link>\n      {hasReact && <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/component`}>React</Link>}\n      <Link partiallyActive={true} activeClassName=\"active\" to={`/${getSectionName}/${getPageName}/guidelines`}>Guidelines</Link>\n    </div>\n  );\n};\n\nSubNav.propTypes = {\n  pageName: PropTypes.string,\n  sectionName: PropTypes.string,\n  hasReact: PropTypes.bool\n};\n\nSubNav.defaultProps = {\n  pageName: \"/\",\n  sectionName: null,\n  hasReact: false\n};\n\nexport default SubNav;\n","Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)?url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  \"module-modifier\": {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: \"keyword\"\n  },\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","!function (i) {\n  var t = i.util.clone(i.languages.javascript);\n  i.languages.jsx = i.languages.extend(\"markup\", t), i.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i, i.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, i.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i, i.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, i.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, i.languages.jsx.tag), i.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: i.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, i.languages.jsx.tag);\n\n  var o = function o(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(o).join(\"\") : \"\";\n  },\n      p = function p(t) {\n    for (var n = [], e = 0; e < t.length; e++) {\n      var a = t[e],\n          s = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < n.length && n[n.length - 1].tagName === o(a.content[0].content[1]) && n.pop() : \"/>\" === a.content[a.content.length - 1].content || n.push({\n        tagName: o(a.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n.length && \"punctuation\" === a.type && \"{\" === a.content ? n[n.length - 1].openedBraces++ : 0 < n.length && 0 < n[n.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? n[n.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof a) && 0 < n.length && 0 === n[n.length - 1].openedBraces) {\n        var g = o(a);\n        e < t.length - 1 && (\"string\" == typeof t[e + 1] || \"plain-text\" === t[e + 1].type) && (g += o(t[e + 1]), t.splice(e + 1, 1)), 0 < e && (\"string\" == typeof t[e - 1] || \"plain-text\" === t[e - 1].type) && (g = o(t[e - 1]) + g, t.splice(e - 1, 1), e--), t[e] = new i.Token(\"plain-text\", g, null, g);\n      }\n\n      a.content && \"string\" != typeof a.content && p(a.content);\n    }\n  };\n\n  i.hooks.add(\"after-tokenize\", function (t) {\n    \"jsx\" !== t.language && \"tsx\" !== t.language || p(t.tokens);\n  });\n}(Prism);","import React from \"react\";\nimport Prism from \"prismjs\";\nimport \"prismjs/plugins/custom-class/prism-custom-class.min.js\";\nimport \"prismjs/components/prism-jsx.min.js\";\nimport \"prismjs/components/prism-scss.min.js\";\nimport PropTypes from \"prop-types\";\n\nclass CodeToggle extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n    this.toggleCode = this.toggleCode.bind(this);\n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggleCode() {\n    this.setState((prevState) => ({\n      showCode: !prevState.showCode\n    }));\n  }\n\n  render() {\n    const { children, language } = this.props;\n    const { showCode } = this.state;\n    Prism.plugins.customClass.map({ tag: \"exampletag\" });\n\n    return (\n      <div className={showCode ? \"group-open\" : \"\"}>\n        <div onClick={this.toggleCode} className={showCode ? \"code-toggle is-open\" : \"code-toggle\"}>\n          <i className=\"icon--code\" />\n        </div>\n        <pre className={showCode ? `language-${language} show` : `language-${language}`}>\n          <code className={showCode ? `language-${language} show` : `language-${language}`}>{children}</code>\n        </pre>\n      </div>\n    );\n  }\n\n}\n\nCodeToggle.propTypes = {\n  children: PropTypes.string,\n  language: PropTypes.string\n};\n\nCodeToggle.defaultProps = {\n  children: \"Default\",\n  language: \"html\"\n};\n\nexport default CodeToggle;\n"],"sourceRoot":""}