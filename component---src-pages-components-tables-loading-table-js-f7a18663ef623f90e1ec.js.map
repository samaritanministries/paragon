{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./src/pages/components/tables/loadingTable.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","LoadingTable","render","this","bind","TableTitle","TableRows","props","children","isExpandable","isSelectable","className","cn","tableTitle","numberOfColumns","numberOfRows","from","_","r","c","React","Component","defaultProps"],"mappings":";+EAAA,OAOA,WACE,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,SAGZ,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIG,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAC/Bd,EAAQM,KAAKQ,QAIjBd,EAAQM,KAAKF,EAAIO,aAKvB,OAAOX,EAAQgB,KAAK,KAGeC,EAAOC,SAC1CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aA9CL,I,2ICHqBqB,E,0GAEnBC,OAAA,WACE,IAAMD,EAAeE,KAAKF,aAAaG,KAAKD,MAE5C,OACE,kBAAC,EAAD,O,EAIJF,aAAA,WACE,IAAMI,EAAaF,KAAKE,WAAWD,KAAKD,MAClCG,EAAYH,KAAKG,UAAUF,KAAKD,MAFzB,EAGoCA,KAAKI,MAA9CC,EAHK,EAGLA,SAAUC,EAHL,EAGKA,aAAcC,EAHnB,EAGmBA,aAEhC,OACE,yBAAKC,UAAWC,IAAG,CACf,iBAAkBH,EAClB,iBAAkBC,EAClB,yBAAyB,KAE3B,kBAACL,EAAD,MACA,wBAAIM,UAAU,qBACXH,GAEH,kBAACF,EAAD,Q,EAKND,WAAA,WAAc,IACJQ,EAAeV,KAAKI,MAApBM,WAER,OAAkB,MAAdA,EAEA,wBAAIF,UAAU,qBAAqBE,GAG7B,M,EAIZP,UAAA,WAAa,IACHQ,EAAoBX,KAAKI,MAAzBO,gBACAC,EAAiBZ,KAAKI,MAAtBQ,aAER,OACE,oCAEE3B,MAAM4B,KAAK,CAAEhC,OAAQ+B,IAAgB,SAACE,EAAGC,GAAJ,OACnC,wBAAIP,UAAU,YAAYhB,IAAKuB,GAE3B9B,MAAM4B,KAAK,CAAEhC,OAAQ8B,IAAmB,SAACG,EAAGE,GAAJ,OACtC,wBAAIxB,IAAKwB,GAAT,c,GArD0BC,IAAMC,WAgEhDpB,EAAaqB,aAAe,CAC1Bb,cAAc,EACdC,cAAc,EACdI,gBAAiB,EACjBC,aAAc,EACdF,WAAY","file":"component---src-pages-components-tables-loading-table-js-f7a18663ef623f90e1ec.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import cn from \"classnames\";\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class LoadingTable extends React.Component {\n\n  render() {\n    const LoadingTable = this.LoadingTable.bind(this);\n\n    return (\n      <LoadingTable />\n    );\n  }\n\n  LoadingTable() {\n    const TableTitle = this.TableTitle.bind(this);\n    const TableRows = this.TableRows.bind(this);\n    const { children, isExpandable, isSelectable } = this.props;\n\n    return (\n      <div className={cn({\n          \"row-expandable\": isExpandable,\n          \"row-selectable\": isSelectable,\n          \"flex-table is-loading\": true\n        })}>\n        <TableTitle />\n        <ol className=\"table-row--header\">\n          {children}\n        </ol>\n        <TableRows />\n      </div>\n    );\n  }\n\n  TableTitle() {\n    const { tableTitle } = this.props;\n\n    if (tableTitle != null) {\n      return (\n        <h3 className=\"flex-table--title\">{tableTitle}</h3>\n      );\n    } else {\n      return (null);\n    }\n  }\n\n  TableRows() {\n    const { numberOfColumns } = this.props;\n    const { numberOfRows } = this.props;\n\n    return (\n      <>\n      {\n        Array.from({ length: numberOfRows }, (_, r) => (\n          <ol className=\"table-row\" key={r}>\n            {\n              Array.from({ length: numberOfColumns }, (_, c) => (\n                <li key={c}>&nbsp;</li>\n              ))\n            }\n          </ol>\n        ))\n      }\n      </>\n    );\n  }\n}\n\nLoadingTable.defaultProps = {\n  isExpandable: false,\n  isSelectable: false,\n  numberOfColumns: 4,\n  numberOfRows: 3,\n  tableTitle: null\n};\n\nLoadingTable.propTypes = {\n  isExpandable: PropTypes.bool,\n  isSelectable: PropTypes.bool,\n  numberOfColumns: PropTypes.number,\n  numberOfRows: PropTypes.number,\n  tableTitle: PropTypes.string\n};\n"],"sourceRoot":""}